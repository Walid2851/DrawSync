{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Rooms API\nexport const roomsAPI = {\n  createRoom: roomData => api.post('/rooms/', roomData),\n  joinRoom: roomData => api.post('/rooms/join', roomData),\n  leaveRoom: roomId => api.post(`/rooms/${roomId}/leave`),\n  getPublicRooms: () => api.get('/rooms/'),\n  getRoomByCode: roomCode => api.get(`/rooms/${roomCode}`),\n  getRoomPlayers: roomId => api.get(`/rooms/${roomId}/players`)\n};\n\n// Games API\nexport const gamesAPI = {\n  startGame: roomId => api.post(`/games/${roomId}/start`),\n  getGameState: roomId => api.get(`/games/${roomId}/state`),\n  submitDrawing: (roomId, drawingData) => api.post(`/games/${roomId}/draw`, drawingData),\n  submitGuess: (roomId, guessData) => api.post(`/games/${roomId}/guess`, guessData),\n  getPublicRooms: () => api.get('/games/rooms/public')\n};\n\n// Users API\nexport const usersAPI = {\n  getUserStats: () => api.get('/users/stats'),\n  getLeaderboard: () => api.get('/users/leaderboard')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getCurrentUser","get","roomsAPI","createRoom","roomData","joinRoom","leaveRoom","roomId","getPublicRooms","getRoomByCode","roomCode","getRoomPlayers","gamesAPI","startGame","getGameState","submitDrawing","drawingData","submitGuess","guessData","usersAPI","getUserStats","getLeaderboard"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me'),\n};\n\n// Rooms API\nexport const roomsAPI = {\n  createRoom: (roomData) => api.post('/rooms/', roomData),\n  joinRoom: (roomData) => api.post('/rooms/join', roomData),\n  leaveRoom: (roomId) => api.post(`/rooms/${roomId}/leave`),\n  getPublicRooms: () => api.get('/rooms/'),\n  getRoomByCode: (roomCode) => api.get(`/rooms/${roomCode}`),\n  getRoomPlayers: (roomId) => api.get(`/rooms/${roomId}/players`),\n};\n\n// Games API\nexport const gamesAPI = {\n  startGame: (roomId) => api.post(`/games/${roomId}/start`),\n  getGameState: (roomId) => api.get(`/games/${roomId}/state`),\n  submitDrawing: (roomId, drawingData) => api.post(`/games/${roomId}/draw`, drawingData),\n  submitGuess: (roomId, guessData) => api.post(`/games/${roomId}/guess`, guessData),\n  getPublicRooms: () => api.get('/games/rooms/public'),\n};\n\n// Users API\nexport const usersAPI = {\n  getUserStats: () => api.get('/users/stats'),\n  getLeaderboard: () => api.get('/users/leaderboard'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}