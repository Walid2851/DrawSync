{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  width = 800,\n  height = 600\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n  const [lastDrawingDataLength, setLastDrawingDataLength] = useState(0);\n  const {\n    user\n  } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = (gameState === null || gameState === void 0 ? void 0 : gameState.current_drawer_id) === (user === null || user === void 0 ? void 0 : user.id) || false;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round or drawing data is cleared\n  useEffect(() => {\n    if (isGameActive && gameState !== null && gameState !== void 0 && gameState.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState === null || gameState === void 0 ? void 0 : gameState.current_round, isGameActive]);\n\n  // Clear canvas when drawing data is cleared\n  useEffect(() => {\n    if (drawingData.length === 0 && isGameActive) {\n      clearCanvas();\n    }\n  }, [drawingData.length, isGameActive]);\n\n  // Improved drawing data processing - only process new data\n  useEffect(() => {\n    if (drawingData.length > lastDrawingDataLength) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Process only the new drawing data\n      const newData = drawingData.slice(lastDrawingDataLength);\n      newData.forEach(data => {\n        if (data.is_drawing) {\n          // Set drawing style\n          ctx.strokeStyle = data.color || '#000000';\n          ctx.lineWidth = data.brush_size || 2;\n          ctx.lineCap = 'round';\n          ctx.lineJoin = 'round';\n\n          // If this is the first point in a stroke, just move to it\n          if (data.is_first_point) {\n            ctx.beginPath();\n            ctx.moveTo(data.x, data.y);\n          } else {\n            // Draw line to this point\n            ctx.lineTo(data.x, data.y);\n            ctx.stroke();\n          }\n        } else {\n          // End the current stroke\n          ctx.stroke();\n        }\n      });\n      setLastDrawingDataLength(drawingData.length);\n    }\n  }, [drawingData, lastDrawingDataLength]);\n  const getMousePos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const getTouchPos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{\n      x,\n      y,\n      is_drawing: true\n    }]);\n\n    // Send first point with is_first_point flag\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: true,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n\n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user === null || user === void 0 ? void 0 : user.id,\n      username: user === null || user === void 0 ? void 0 : user.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n  }, [isGameActive, isCurrentDrawer, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n  const draw = useCallback((x, y) => {\n    if (!isDrawing || !isGameActive || !isCurrentDrawer) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Draw locally for immediate feedback\n    ctx.strokeStyle = brushColor;\n    ctx.lineWidth = brushSize;\n    ctx.lineTo(x, y);\n    ctx.stroke();\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, {\n      x,\n      y,\n      is_drawing: true\n    }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: false,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n\n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user === null || user === void 0 ? void 0 : user.id,\n      username: user === null || user === void 0 ? void 0 : user.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n    setLastX(x);\n    setLastY(y);\n  }, [isDrawing, isGameActive, isCurrentDrawer, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(false);\n\n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n\n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user === null || user === void 0 ? void 0 : user.id,\n      username: user === null || user === void 0 ? void 0 : user.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    setLastDrawingDataLength(0);\n  }, [width, height]);\n\n  // Mouse events\n  const handleMouseDown = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n  const handleMouseMove = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw]);\n  const handleMouseUp = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  const handleMouseLeave = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n  const handleTouchMove = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: `border-2 border-gray-300 rounded-lg bg-white ${isCurrentDrawer && isGameActive ? 'cursor-crosshair' : 'cursor-not-allowed'}`,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        width: `${width}px`,\n        height: `${height}px`,\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), !isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-lg font-medium\",\n        children: \"Game not started yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), isGameActive && !isCurrentDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-lg font-medium\",\n        children: gameState !== null && gameState !== void 0 && gameState.current_drawer_id ? `Waiting for ${gameState.current_drawer_id === (user === null || user === void 0 ? void 0 : user.id) ? 'you' : 'someone'} to draw...` : 'Waiting for drawer...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), isCurrentDrawer && isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 bg-white bg-opacity-90 p-3 rounded-lg shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => useGameStore.getState().setBrushColor(e.target.value),\n            className: \"w-8 h-8 border rounded cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: brushSize,\n            onChange: e => useGameStore.getState().setBrushSize(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: brushSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"kqzOWGnxquLRwo8wj2bYIK7OSFc=\", false, function () {\n  return [useAuthStore, useGameStore];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useGameStore","useAuthStore","jsxDEV","_jsxDEV","DrawingCanvas","width","height","_s","canvasRef","isDrawing","setIsDrawing","lastX","setLastX","lastY","setLastY","currentStroke","setCurrentStroke","lastDrawingDataLength","setLastDrawingDataLength","user","isDrawingMode","brushColor","brushSize","drawingData","addDrawingData","sendDrawData","currentDrawer","isGameActive","gameState","clearDrawing","isCurrentDrawer","current_drawer_id","id","canvas","current","ctx","getContext","fillStyle","fillRect","lineCap","lineJoin","current_round","clearCanvas","length","newData","slice","forEach","data","is_drawing","strokeStyle","color","lineWidth","brush_size","is_first_point","beginPath","moveTo","x","y","lineTo","stroke","getMousePos","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","getTouchPos","touch","touches","startDrawing","drawData","localDrawData","user_id","username","timestamp","Date","now","draw","prev","stopDrawing","handleMouseDown","preventDefault","pos","handleMouseMove","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchMove","handleTouchEnd","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","style","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","getState","setBrushColor","target","min","max","setBrushSize","parseInt","onClick","_c","$RefreshReg$"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\n\nconst DrawingCanvas = ({ width = 800, height = 600 }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n  const [lastDrawingDataLength, setLastDrawingDataLength] = useState(0);\n\n  const { user } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing,\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = gameState?.current_drawer_id === user?.id || false;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    \n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round or drawing data is cleared\n  useEffect(() => {\n    if (isGameActive && gameState?.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState?.current_round, isGameActive]);\n\n  // Clear canvas when drawing data is cleared\n  useEffect(() => {\n    if (drawingData.length === 0 && isGameActive) {\n      clearCanvas();\n    }\n  }, [drawingData.length, isGameActive]);\n\n  // Improved drawing data processing - only process new data\n  useEffect(() => {\n    if (drawingData.length > lastDrawingDataLength) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      \n      // Process only the new drawing data\n      const newData = drawingData.slice(lastDrawingDataLength);\n      \n      newData.forEach((data) => {\n        if (data.is_drawing) {\n          // Set drawing style\n          ctx.strokeStyle = data.color || '#000000';\n          ctx.lineWidth = data.brush_size || 2;\n          ctx.lineCap = 'round';\n          ctx.lineJoin = 'round';\n          \n          // If this is the first point in a stroke, just move to it\n          if (data.is_first_point) {\n            ctx.beginPath();\n            ctx.moveTo(data.x, data.y);\n          } else {\n            // Draw line to this point\n            ctx.lineTo(data.x, data.y);\n            ctx.stroke();\n          }\n        } else {\n          // End the current stroke\n          ctx.stroke();\n        }\n      });\n      \n      setLastDrawingDataLength(drawingData.length);\n    }\n  }, [drawingData, lastDrawingDataLength]);\n\n  const getMousePos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const getTouchPos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{ x, y, is_drawing: true }]);\n    \n    // Send first point with is_first_point flag\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: true,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    \n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user?.id,\n      username: user?.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n  }, [isGameActive, isCurrentDrawer, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n\n  const draw = useCallback((x, y) => {\n    if (!isDrawing || !isGameActive || !isCurrentDrawer) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Draw locally for immediate feedback\n    ctx.strokeStyle = brushColor;\n    ctx.lineWidth = brushSize;\n    ctx.lineTo(x, y);\n    ctx.stroke();\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, { x, y, is_drawing: true }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: false,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    \n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user?.id,\n      username: user?.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n\n    setLastX(x);\n    setLastY(y);\n  }, [isDrawing, isGameActive, isCurrentDrawer, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(false);\n    \n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    \n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user?.id,\n      username: user?.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n    \n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    setLastDrawingDataLength(0);\n  }, [width, height]);\n\n  // Mouse events\n  const handleMouseDown = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n\n  const handleMouseMove = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw]);\n\n  const handleMouseUp = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  const handleMouseLeave = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n\n  const handleTouchMove = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  return (\n    <div className=\"relative\">\n      <canvas\n        ref={canvasRef}\n        className={`border-2 border-gray-300 rounded-lg bg-white ${\n          isCurrentDrawer && isGameActive ? 'cursor-crosshair' : 'cursor-not-allowed'\n        }`}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n          maxWidth: '100%',\n          maxHeight: '100%',\n        }}\n      />\n      \n      {!isGameActive && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\">\n          <p className=\"text-white text-lg font-medium\">\n            Game not started yet\n          </p>\n        </div>\n      )}\n      \n      {isGameActive && !isCurrentDrawer && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 rounded-lg\">\n          <p className=\"text-white text-lg font-medium\">\n            {gameState?.current_drawer_id ? \n              `Waiting for ${gameState.current_drawer_id === user?.id ? 'you' : 'someone'} to draw...` : \n              'Waiting for drawer...'\n            }\n          </p>\n        </div>\n      )}\n\n      {/* Drawing controls for current drawer */}\n      {isCurrentDrawer && isGameActive && (\n        <div className=\"absolute top-4 left-4 bg-white bg-opacity-90 p-3 rounded-lg shadow-lg\">\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium\">Color:</label>\n              <input\n                type=\"color\"\n                value={brushColor}\n                onChange={(e) => useGameStore.getState().setBrushColor(e.target.value)}\n                className=\"w-8 h-8 border rounded cursor-pointer\"\n              />\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium\">Size:</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                value={brushSize}\n                onChange={(e) => useGameStore.getState().setBrushSize(parseInt(e.target.value))}\n                className=\"w-20\"\n              />\n              <span className=\"text-xs\">{brushSize}</span>\n            </div>\n            <button\n              onClick={clearCanvas}\n              className=\"px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600\"\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrawingCanvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}