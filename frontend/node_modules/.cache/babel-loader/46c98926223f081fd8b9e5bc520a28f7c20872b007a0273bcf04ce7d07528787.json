{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Documents/Networking/drawsync/frontend/src/pages/GameRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport DrawingCanvas from '../components/DrawingCanvas';\nimport ChatBox from '../components/ChatBox';\nimport Button from '../components/Button';\nimport RoundEndPopup from '../components/RoundEndPopup';\nimport GameEndPopup from '../components/GameEndPopup';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport socketManager from '../utils/socket';\nimport { roomsAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameRoom = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    token,\n    user\n  } = useAuthStore();\n  const {\n    players,\n    isInRoom,\n    isGameActive,\n    currentRound,\n    totalRounds,\n    timeRemaining,\n    currentWord,\n    isDrawing,\n    drawingData,\n    chatMessages,\n    guessInput,\n    isSocketConnected,\n    isLoading,\n    error,\n    showRoundEndPopup,\n    roundEndData,\n    showGameEndPopup,\n    gameEndData,\n    joinRoom,\n    leaveRoom,\n    deleteRoom,\n    setPlayers,\n    addChatMessageFromSocket,\n    addCorrectGuessMessage,\n    setGuessInput,\n    sendGuess,\n    sendChatMessage,\n    startGame,\n    setReady,\n    skipTurn,\n    resetGameState,\n    hideRoundEndPopup,\n    hideGameEndPopup,\n    handleSocketConnected,\n    handleAuthenticated,\n    handleRoomJoined,\n    handlePlayerJoined,\n    handlePlayerLeft,\n    handleGameStarted,\n    handleRoundStarted,\n    handleWordAssigned,\n    handleCorrectGuess,\n    handleAllGuessed,\n    handleRoundEnded,\n    handleGameEnded,\n    handleTimeUpdate,\n    handleCanvasCleared,\n    handleRoomDeleted,\n    handlePlayersUpdate,\n    handleDrawData,\n    handleGameState\n  } = useGameStore();\n  const [isReady, setIsReady] = useState(false);\n\n  // Socket event handlers\n  const handleSocketConnectedEvent = useCallback(data => {\n    handleSocketConnected(data);\n  }, [handleSocketConnected]);\n  const handleAuthenticatedEvent = useCallback(data => {\n    handleAuthenticated(data);\n    // Join room after successful authentication\n    console.log('Authentication successful, joining room...');\n    joinRoom(parseInt(roomId));\n  }, [handleAuthenticated, joinRoom, roomId]);\n  const handleRoomJoinedEvent = useCallback(data => {\n    handleRoomJoined(data);\n    toast.success('Joined room successfully!');\n  }, [handleRoomJoined]);\n  const handlePlayerJoinedEvent = useCallback(data => {\n    handlePlayerJoined(data);\n    toast(`${data.username} joined the room`, {\n      icon: '👤'\n    });\n  }, [handlePlayerJoined]);\n  const handlePlayerLeftEvent = useCallback(data => {\n    handlePlayerLeft(data);\n    toast(`${data.username} left the room`, {\n      icon: '👤'\n    });\n  }, [handlePlayerLeft]);\n  const handleGameStartedEvent = useCallback(data => {\n    handleGameStarted(data);\n    toast.success('Game started!');\n  }, [handleGameStarted]);\n  const handleRoundStartedEvent = useCallback(data => {\n    handleRoundStarted(data);\n    toast.success(`Round ${data.round} started!`);\n  }, [handleRoundStarted]);\n  const handleWordAssignedEvent = useCallback(data => {\n    handleWordAssigned(data);\n    if (data.word && data.word !== '_' * data.word.length) {\n      toast.success(`Your word: ${data.word}`);\n    }\n  }, [handleWordAssigned]);\n  const handleCorrectGuessEvent = useCallback(data => {\n    handleCorrectGuess(data);\n    toast.success(`${data.username} guessed correctly!`);\n  }, [handleCorrectGuess]);\n  const handleAllGuessedEvent = useCallback(data => {\n    handleAllGuessed(data);\n    toast.success('Everyone guessed correctly! Round ending...');\n  }, [handleAllGuessed]);\n  const handleRoundEndedEvent = useCallback(data => {\n    handleRoundEnded(data);\n    toast(`Round ${data.round} ended! Word was: ${data.word}`, {\n      icon: '⏹️'\n    });\n  }, [handleRoundEnded]);\n  const handleGameEndedEvent = useCallback(data => {\n    handleGameEnded(data);\n    toast.success('Game ended!');\n  }, [handleGameEnded]);\n  const handleTimeUpdateEvent = useCallback(data => {\n    handleTimeUpdate(data);\n  }, [handleTimeUpdate]);\n  const handleCanvasClearedEvent = useCallback(data => {\n    handleCanvasCleared(data);\n    toast('Canvas cleared', {\n      icon: '🧹'\n    });\n  }, [handleCanvasCleared]);\n  const handleRoomDeletedEvent = useCallback(data => {\n    handleRoomDeleted(data);\n    toast.error('Room has been deleted');\n    navigate('/dashboard');\n  }, [handleRoomDeleted, navigate]);\n  const handlePlayersUpdateEvent = useCallback(data => {\n    handlePlayersUpdate(data);\n  }, [handlePlayersUpdate]);\n  const handleChatMessageEvent = useCallback(data => {\n    addChatMessageFromSocket(data);\n  }, [addChatMessageFromSocket]);\n  const handleDrawDataEvent = useCallback(data => {\n    // Add incoming drawing data to the store\n    handleDrawData(data);\n    console.log('Draw data received:', data);\n  }, [handleDrawData]);\n  const handleGameStateEvent = useCallback(data => {\n    // Handle game state updates\n    handleGameState(data);\n    console.log('Game state update:', data);\n  }, [handleGameState]);\n\n  // Game controls\n  const handleStartGame = () => {\n    startGame();\n  };\n  const handleReadyToggle = () => {\n    const newReadyState = !isReady;\n    setIsReady(newReadyState);\n    setReady(newReadyState);\n  };\n  const handleSkipTurn = () => {\n    skipTurn();\n  };\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/dashboard');\n  };\n  const handleDeleteRoom = () => {\n    if (window.confirm('Are you sure you want to delete this room? All players will be disconnected.')) {\n      deleteRoom();\n      navigate('/dashboard');\n    }\n  };\n  const handleSendMessage = message => {\n    sendChatMessage(message);\n  };\n  const handleSendGuess = () => {\n    sendGuess();\n  };\n  const handleCloseRoundEndPopup = () => {\n    hideRoundEndPopup();\n  };\n  const handleGoToDashboard = () => {\n    hideRoundEndPopup();\n    navigate('/dashboard');\n  };\n  const handleCloseGameEndPopup = () => {\n    hideGameEndPopup();\n  };\n  const handleGoToDashboardFromGameEnd = () => {\n    hideGameEndPopup();\n    navigate('/dashboard');\n  };\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = isDrawing;\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    console.log('GameRoom: Setting up socket connection...');\n\n    // Connect to socket\n    socketManager.connect(token);\n\n    // Register all event listeners\n    socketManager.on('socket_connected', handleSocketConnectedEvent);\n    socketManager.on('authenticated', handleAuthenticatedEvent);\n    socketManager.on('room_joined', handleRoomJoinedEvent);\n    socketManager.on('player_joined', handlePlayerJoinedEvent);\n    socketManager.on('player_left', handlePlayerLeftEvent);\n    socketManager.on('chat_message', handleChatMessageEvent);\n    socketManager.on('game_started', handleGameStartedEvent);\n    socketManager.on('round_started', handleRoundStartedEvent);\n    socketManager.on('correct_guess', handleCorrectGuessEvent);\n    socketManager.on('all_guessed', handleAllGuessedEvent);\n    socketManager.on('round_ended', handleRoundEndedEvent);\n    socketManager.on('game_ended', handleGameEndedEvent);\n    socketManager.on('time_update', handleTimeUpdateEvent);\n    socketManager.on('word_assigned', handleWordAssignedEvent);\n    socketManager.on('game_state', handleGameStateEvent);\n    socketManager.on('canvas_cleared', handleCanvasClearedEvent);\n    socketManager.on('draw_data', handleDrawDataEvent);\n    socketManager.on('room_deleted', handleRoomDeletedEvent);\n    socketManager.on('players_update', handlePlayersUpdateEvent);\n\n    // Initial fetch of players\n    const fetchPlayers = async () => {\n      try {\n        const response = await roomsAPI.getRoomPlayers(roomId);\n        if (response.data && response.data.players) {\n          setPlayers(response.data.players);\n        }\n      } catch (err) {\n        console.error('Failed to fetch players:', err);\n      }\n    };\n    fetchPlayers();\n\n    // Cleanup on unmount\n    return () => {\n      socketManager.off('socket_connected', handleSocketConnectedEvent);\n      socketManager.off('authenticated', handleAuthenticatedEvent);\n      socketManager.off('room_joined', handleRoomJoinedEvent);\n      socketManager.off('player_joined', handlePlayerJoinedEvent);\n      socketManager.off('player_left', handlePlayerLeftEvent);\n      socketManager.off('chat_message', handleChatMessageEvent);\n      socketManager.off('game_started', handleGameStartedEvent);\n      socketManager.off('round_started', handleRoundStartedEvent);\n      socketManager.off('correct_guess', handleCorrectGuessEvent);\n      socketManager.off('all_guessed', handleAllGuessedEvent);\n      socketManager.off('round_ended', handleRoundEndedEvent);\n      socketManager.off('game_ended', handleGameEndedEvent);\n      socketManager.off('time_update', handleTimeUpdateEvent);\n      socketManager.off('word_assigned', handleWordAssignedEvent);\n      socketManager.off('game_state', handleGameStateEvent);\n      socketManager.off('canvas_cleared', handleCanvasClearedEvent);\n      socketManager.off('draw_data', handleDrawDataEvent);\n      socketManager.off('room_deleted', handleRoomDeletedEvent);\n      socketManager.off('players_update', handlePlayersUpdateEvent);\n    };\n  }, [token, roomId, navigate, joinRoom, setPlayers, handleSocketConnectedEvent, handleAuthenticatedEvent, handleRoomJoinedEvent, handlePlayerJoinedEvent, handlePlayerLeftEvent, handleChatMessageEvent, handleGameStartedEvent, handleRoundStartedEvent, handleCorrectGuessEvent, handleAllGuessedEvent, handleRoundEndedEvent, handleGameEndedEvent, handleTimeUpdateEvent, handleWordAssignedEvent, handleGameStateEvent, handleCanvasClearedEvent, handleDrawDataEvent, handleRoomDeletedEvent, handlePlayersUpdateEvent]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: \"Loading room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-xl\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-800\",\n              children: [\"Room \", roomId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4 text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Players: \", players.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Round: \", currentRound, \"/\", totalRounds]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), isGameActive && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Time: \", timeRemaining, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 34\n              }, this), isSocketConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-500\",\n                children: \"\\u25CF Connected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500\",\n                children: \"\\u25CF Disconnected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [!isGameActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReadyToggle,\n                variant: isReady ? 'success' : 'secondary',\n                children: isReady ? 'Ready' : 'Not Ready'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleStartGame,\n                variant: \"primary\",\n                children: \"Start Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), isGameActive && isCurrentDrawer && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSkipTurn,\n              variant: \"warning\",\n              children: \"Skip Turn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleLeaveRoom,\n              variant: \"secondary\",\n              children: \"Leave Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleDeleteRoom,\n              variant: \"danger\",\n              children: \"Delete Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold mb-4\",\n              children: \"Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between p-2 bg-gray-50 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: player.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this), player.ready && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-green-500 text-sm\",\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [player.score || 0, \" pts\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this)]\n              }, `${player.id}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold mb-2\",\n                children: \"Drawing Canvas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), isGameActive && isCurrentDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Your turn to draw! Word: \", currentWord]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DrawingCanvas, {\n              width: 800,\n              height: 600\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: /*#__PURE__*/_jsxDEV(ChatBox, {\n            messages: chatMessages,\n            onSendMessage: handleSendMessage,\n            guessInput: guessInput,\n            onGuessInputChange: setGuessInput,\n            onSendGuess: handleSendGuess,\n            isGameActive: isGameActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoundEndPopup, {\n      isOpen: showRoundEndPopup,\n      onClose: hideRoundEndPopup,\n      roundNumber: (roundEndData === null || roundEndData === void 0 ? void 0 : roundEndData.roundNumber) || 0,\n      word: (roundEndData === null || roundEndData === void 0 ? void 0 : roundEndData.word) || '',\n      players: (roundEndData === null || roundEndData === void 0 ? void 0 : roundEndData.players) || [],\n      onGoToDashboard: handleGoToDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameEndPopup, {\n      isOpen: showGameEndPopup,\n      onClose: hideGameEndPopup,\n      finalScores: (gameEndData === null || gameEndData === void 0 ? void 0 : gameEndData.finalScores) || {},\n      players: (gameEndData === null || gameEndData === void 0 ? void 0 : gameEndData.players) || [],\n      onGoToDashboard: handleGoToDashboardFromGameEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"YMgMT68zedN10ohXxWvZ7bvQ5ik=\", false, function () {\n  return [useParams, useNavigate, useAuthStore, useGameStore];\n});\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useParams","useNavigate","toast","DrawingCanvas","ChatBox","Button","RoundEndPopup","GameEndPopup","useGameStore","useAuthStore","socketManager","roomsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","GameRoom","_s","roomId","navigate","token","user","players","isInRoom","isGameActive","currentRound","totalRounds","timeRemaining","currentWord","isDrawing","drawingData","chatMessages","guessInput","isSocketConnected","isLoading","error","showRoundEndPopup","roundEndData","showGameEndPopup","gameEndData","joinRoom","leaveRoom","deleteRoom","setPlayers","addChatMessageFromSocket","addCorrectGuessMessage","setGuessInput","sendGuess","sendChatMessage","startGame","setReady","skipTurn","resetGameState","hideRoundEndPopup","hideGameEndPopup","handleSocketConnected","handleAuthenticated","handleRoomJoined","handlePlayerJoined","handlePlayerLeft","handleGameStarted","handleRoundStarted","handleWordAssigned","handleCorrectGuess","handleAllGuessed","handleRoundEnded","handleGameEnded","handleTimeUpdate","handleCanvasCleared","handleRoomDeleted","handlePlayersUpdate","handleDrawData","handleGameState","isReady","setIsReady","handleSocketConnectedEvent","data","handleAuthenticatedEvent","console","log","parseInt","handleRoomJoinedEvent","success","handlePlayerJoinedEvent","username","icon","handlePlayerLeftEvent","handleGameStartedEvent","handleRoundStartedEvent","round","handleWordAssignedEvent","word","length","handleCorrectGuessEvent","handleAllGuessedEvent","handleRoundEndedEvent","handleGameEndedEvent","handleTimeUpdateEvent","handleCanvasClearedEvent","handleRoomDeletedEvent","handlePlayersUpdateEvent","handleChatMessageEvent","handleDrawDataEvent","handleGameStateEvent","handleStartGame","handleReadyToggle","newReadyState","handleSkipTurn","handleLeaveRoom","handleDeleteRoom","window","confirm","handleSendMessage","message","handleSendGuess","handleCloseRoundEndPopup","handleGoToDashboard","handleCloseGameEndPopup","handleGoToDashboardFromGameEnd","isCurrentDrawer","connect","on","fetchPlayers","response","getRoomPlayers","err","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","map","player","index","ready","score","id","width","height","messages","onSendMessage","onGuessInputChange","onSendGuess","isOpen","onClose","roundNumber","onGoToDashboard","finalScores","_c","$RefreshReg$"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/pages/GameRoom.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport DrawingCanvas from '../components/DrawingCanvas';\nimport ChatBox from '../components/ChatBox';\nimport Button from '../components/Button';\nimport RoundEndPopup from '../components/RoundEndPopup';\nimport GameEndPopup from '../components/GameEndPopup';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport socketManager from '../utils/socket';\nimport { roomsAPI } from '../utils/api';\n\nconst GameRoom = () => {\n  const { roomId } = useParams();\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const {\n    players,\n    isInRoom,\n    isGameActive,\n    currentRound,\n    totalRounds,\n    timeRemaining,\n    currentWord,\n    isDrawing,\n    drawingData,\n    chatMessages,\n    guessInput,\n    isSocketConnected,\n    isLoading,\n    error,\n    showRoundEndPopup,\n    roundEndData,\n    showGameEndPopup,\n    gameEndData,\n    joinRoom,\n    leaveRoom,\n    deleteRoom,\n    setPlayers,\n    addChatMessageFromSocket,\n    addCorrectGuessMessage,\n    setGuessInput,\n    sendGuess,\n    sendChatMessage,\n    startGame,\n    setReady,\n    skipTurn,\n    resetGameState,\n    hideRoundEndPopup,\n    hideGameEndPopup,\n    handleSocketConnected,\n    handleAuthenticated,\n    handleRoomJoined,\n    handlePlayerJoined,\n    handlePlayerLeft,\n    handleGameStarted,\n    handleRoundStarted,\n    handleWordAssigned,\n    handleCorrectGuess,\n    handleAllGuessed,\n    handleRoundEnded,\n    handleGameEnded,\n    handleTimeUpdate,\n    handleCanvasCleared,\n    handleRoomDeleted,\n    handlePlayersUpdate,\n    handleDrawData,\n    handleGameState,\n  } = useGameStore();\n\n  const [isReady, setIsReady] = useState(false);\n\n  // Socket event handlers\n  const handleSocketConnectedEvent = useCallback((data) => {\n    handleSocketConnected(data);\n  }, [handleSocketConnected]);\n\n  const handleAuthenticatedEvent = useCallback((data) => {\n    handleAuthenticated(data);\n    // Join room after successful authentication\n    console.log('Authentication successful, joining room...');\n    joinRoom(parseInt(roomId));\n  }, [handleAuthenticated, joinRoom, roomId]);\n\n  const handleRoomJoinedEvent = useCallback((data) => {\n    handleRoomJoined(data);\n    toast.success('Joined room successfully!');\n  }, [handleRoomJoined]);\n\n  const handlePlayerJoinedEvent = useCallback((data) => {\n    handlePlayerJoined(data);\n    toast(`${data.username} joined the room`, {\n      icon: '👤',\n    });\n  }, [handlePlayerJoined]);\n\n  const handlePlayerLeftEvent = useCallback((data) => {\n    handlePlayerLeft(data);\n    toast(`${data.username} left the room`, {\n      icon: '👤',\n    });\n  }, [handlePlayerLeft]);\n\n  const handleGameStartedEvent = useCallback((data) => {\n    handleGameStarted(data);\n    toast.success('Game started!');\n  }, [handleGameStarted]);\n\n  const handleRoundStartedEvent = useCallback((data) => {\n    handleRoundStarted(data);\n    toast.success(`Round ${data.round} started!`);\n  }, [handleRoundStarted]);\n\n  const handleWordAssignedEvent = useCallback((data) => {\n    handleWordAssigned(data);\n    if (data.word && data.word !== '_' * data.word.length) {\n      toast.success(`Your word: ${data.word}`);\n    }\n  }, [handleWordAssigned]);\n\n  const handleCorrectGuessEvent = useCallback((data) => {\n    handleCorrectGuess(data);\n    toast.success(`${data.username} guessed correctly!`);\n  }, [handleCorrectGuess]);\n\n  const handleAllGuessedEvent = useCallback((data) => {\n    handleAllGuessed(data);\n    toast.success('Everyone guessed correctly! Round ending...');\n  }, [handleAllGuessed]);\n\n  const handleRoundEndedEvent = useCallback((data) => {\n    handleRoundEnded(data);\n    toast(`Round ${data.round} ended! Word was: ${data.word}`, {\n      icon: '⏹️',\n    });\n  }, [handleRoundEnded]);\n\n  const handleGameEndedEvent = useCallback((data) => {\n    handleGameEnded(data);\n    toast.success('Game ended!');\n  }, [handleGameEnded]);\n\n  const handleTimeUpdateEvent = useCallback((data) => {\n    handleTimeUpdate(data);\n  }, [handleTimeUpdate]);\n\n  const handleCanvasClearedEvent = useCallback((data) => {\n    handleCanvasCleared(data);\n    toast('Canvas cleared', {\n      icon: '🧹',\n    });\n  }, [handleCanvasCleared]);\n\n  const handleRoomDeletedEvent = useCallback((data) => {\n    handleRoomDeleted(data);\n    toast.error('Room has been deleted');\n    navigate('/dashboard');\n  }, [handleRoomDeleted, navigate]);\n\n  const handlePlayersUpdateEvent = useCallback((data) => {\n    handlePlayersUpdate(data);\n  }, [handlePlayersUpdate]);\n\n  const handleChatMessageEvent = useCallback((data) => {\n    addChatMessageFromSocket(data);\n  }, [addChatMessageFromSocket]);\n\n  const handleDrawDataEvent = useCallback((data) => {\n    // Add incoming drawing data to the store\n    handleDrawData(data);\n    console.log('Draw data received:', data);\n  }, [handleDrawData]);\n\n  const handleGameStateEvent = useCallback((data) => {\n    // Handle game state updates\n    handleGameState(data);\n    console.log('Game state update:', data);\n  }, [handleGameState]);\n\n  // Game controls\n  const handleStartGame = () => {\n    startGame();\n  };\n\n  const handleReadyToggle = () => {\n    const newReadyState = !isReady;\n    setIsReady(newReadyState);\n    setReady(newReadyState);\n  };\n\n  const handleSkipTurn = () => {\n    skipTurn();\n  };\n\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/dashboard');\n  };\n\n  const handleDeleteRoom = () => {\n    if (window.confirm('Are you sure you want to delete this room? All players will be disconnected.')) {\n      deleteRoom();\n      navigate('/dashboard');\n    }\n  };\n\n  const handleSendMessage = (message) => {\n    sendChatMessage(message);\n  };\n\n  const handleSendGuess = () => {\n    sendGuess();\n  };\n\n  const handleCloseRoundEndPopup = () => {\n    hideRoundEndPopup();\n  };\n\n  const handleGoToDashboard = () => {\n    hideRoundEndPopup();\n    navigate('/dashboard');\n  };\n\n  const handleCloseGameEndPopup = () => {\n    hideGameEndPopup();\n  };\n\n  const handleGoToDashboardFromGameEnd = () => {\n    hideGameEndPopup();\n    navigate('/dashboard');\n  };\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = isDrawing;\n\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    console.log('GameRoom: Setting up socket connection...');\n\n    // Connect to socket\n    socketManager.connect(token);\n\n    // Register all event listeners\n    socketManager.on('socket_connected', handleSocketConnectedEvent);\n    socketManager.on('authenticated', handleAuthenticatedEvent);\n    socketManager.on('room_joined', handleRoomJoinedEvent);\n    socketManager.on('player_joined', handlePlayerJoinedEvent);\n    socketManager.on('player_left', handlePlayerLeftEvent);\n    socketManager.on('chat_message', handleChatMessageEvent);\n    socketManager.on('game_started', handleGameStartedEvent);\n    socketManager.on('round_started', handleRoundStartedEvent);\n    socketManager.on('correct_guess', handleCorrectGuessEvent);\n    socketManager.on('all_guessed', handleAllGuessedEvent);\n    socketManager.on('round_ended', handleRoundEndedEvent);\n    socketManager.on('game_ended', handleGameEndedEvent);\n    socketManager.on('time_update', handleTimeUpdateEvent);\n    socketManager.on('word_assigned', handleWordAssignedEvent);\n    socketManager.on('game_state', handleGameStateEvent);\n    socketManager.on('canvas_cleared', handleCanvasClearedEvent);\n    socketManager.on('draw_data', handleDrawDataEvent);\n    socketManager.on('room_deleted', handleRoomDeletedEvent);\n    socketManager.on('players_update', handlePlayersUpdateEvent);\n\n    // Initial fetch of players\n    const fetchPlayers = async () => {\n      try {\n        const response = await roomsAPI.getRoomPlayers(roomId);\n        if (response.data && response.data.players) {\n          setPlayers(response.data.players);\n        }\n      } catch (err) {\n        console.error('Failed to fetch players:', err);\n      }\n    };\n    fetchPlayers();\n\n    // Cleanup on unmount\n    return () => {\n      socketManager.off('socket_connected', handleSocketConnectedEvent);\n      socketManager.off('authenticated', handleAuthenticatedEvent);\n      socketManager.off('room_joined', handleRoomJoinedEvent);\n      socketManager.off('player_joined', handlePlayerJoinedEvent);\n      socketManager.off('player_left', handlePlayerLeftEvent);\n      socketManager.off('chat_message', handleChatMessageEvent);\n      socketManager.off('game_started', handleGameStartedEvent);\n      socketManager.off('round_started', handleRoundStartedEvent);\n      socketManager.off('correct_guess', handleCorrectGuessEvent);\n      socketManager.off('all_guessed', handleAllGuessedEvent);\n      socketManager.off('round_ended', handleRoundEndedEvent);\n      socketManager.off('game_ended', handleGameEndedEvent);\n      socketManager.off('time_update', handleTimeUpdateEvent);\n      socketManager.off('word_assigned', handleWordAssignedEvent);\n      socketManager.off('game_state', handleGameStateEvent);\n      socketManager.off('canvas_cleared', handleCanvasClearedEvent);\n      socketManager.off('draw_data', handleDrawDataEvent);\n      socketManager.off('room_deleted', handleRoomDeletedEvent);\n      socketManager.off('players_update', handlePlayersUpdateEvent);\n    };\n  }, [\n    token,\n    roomId,\n    navigate,\n    joinRoom,\n    setPlayers,\n    handleSocketConnectedEvent,\n    handleAuthenticatedEvent,\n    handleRoomJoinedEvent,\n    handlePlayerJoinedEvent,\n    handlePlayerLeftEvent,\n    handleChatMessageEvent,\n    handleGameStartedEvent,\n    handleRoundStartedEvent,\n    handleCorrectGuessEvent,\n    handleAllGuessedEvent,\n    handleRoundEndedEvent,\n    handleGameEndedEvent,\n    handleTimeUpdateEvent,\n    handleWordAssignedEvent,\n    handleGameStateEvent,\n    handleCanvasClearedEvent,\n    handleDrawDataEvent,\n    handleRoomDeletedEvent,\n    handlePlayersUpdateEvent,\n  ]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-xl\">Loading room...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-red-500 text-xl\">Error: {error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-800\">Room {roomId}</h1>\n              <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                <span>Players: {players.length}</span>\n                <span>Round: {currentRound}/{totalRounds}</span>\n                {isGameActive && <span>Time: {timeRemaining}s</span>}\n                {isSocketConnected ? (\n                  <span className=\"text-green-500\">● Connected</span>\n                ) : (\n                  <span className=\"text-red-500\">● Disconnected</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              {!isGameActive && (\n                <>\n                  <Button\n                    onClick={handleReadyToggle}\n                    variant={isReady ? 'success' : 'secondary'}\n                  >\n                    {isReady ? 'Ready' : 'Not Ready'}\n                  </Button>\n                  <Button onClick={handleStartGame} variant=\"primary\">\n                    Start Game\n                  </Button>\n                </>\n              )}\n              {isGameActive && isCurrentDrawer && (\n                <Button onClick={handleSkipTurn} variant=\"warning\">\n                  Skip Turn\n                </Button>\n              )}\n              <Button onClick={handleLeaveRoom} variant=\"secondary\">\n                Leave Room\n              </Button>\n              <Button onClick={handleDeleteRoom} variant=\"danger\">\n                Delete Room\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\n          {/* Players Panel */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <h2 className=\"text-lg font-semibold mb-4\">Players</h2>\n              <div className=\"space-y-2\">\n                {players.map((player, index) => (\n                  <div\n                    key={`${player.id}-${index}`}\n                    className=\"flex items-center justify-between p-2 bg-gray-50 rounded\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">{player.username}</span>\n                      {player.ready && (\n                        <span className=\"text-green-500 text-sm\">✓</span>\n                      )}\n                    </div>\n                    <span className=\"text-sm text-gray-600\">\n                      {player.score || 0} pts\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Game Area */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <div className=\"mb-4\">\n                <h2 className=\"text-lg font-semibold mb-2\">Drawing Canvas</h2>\n                {isGameActive && isCurrentDrawer && (\n                  <div className=\"text-sm text-gray-600 mb-2\">\n                    <span>Your turn to draw! Word: {currentWord}</span>\n                  </div>\n                )}\n              </div>\n              <DrawingCanvas width={800} height={600} />\n            </div>\n          </div>\n\n          {/* Chat Panel */}\n          <div className=\"lg:col-span-1\">\n            <ChatBox\n              messages={chatMessages}\n              onSendMessage={handleSendMessage}\n              guessInput={guessInput}\n              onGuessInputChange={setGuessInput}\n              onSendGuess={handleSendGuess}\n              isGameActive={isGameActive}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Round End Popup */}\n      <RoundEndPopup\n        isOpen={showRoundEndPopup}\n        onClose={hideRoundEndPopup}\n        roundNumber={roundEndData?.roundNumber || 0}\n        word={roundEndData?.word || ''}\n        players={roundEndData?.players || []}\n        onGoToDashboard={handleGoToDashboard}\n      />\n\n      {/* Game End Popup */}\n      <GameEndPopup\n        isOpen={showGameEndPopup}\n        onClose={hideGameEndPopup}\n        finalScores={gameEndData?.finalScores || {}}\n        players={gameEndData?.players || []}\n        onGoToDashboard={handleGoToDashboardFromGameEnd}\n      />\n    </div>\n  );\n};\n\nexport default GameRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}