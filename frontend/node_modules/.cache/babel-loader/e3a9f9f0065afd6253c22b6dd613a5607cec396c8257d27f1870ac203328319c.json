{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Documents/Networking/drawsync/frontend/src/pages/GameRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport DrawingCanvas from '../components/DrawingCanvas';\nimport ChatBox from '../components/ChatBox';\nimport Button from '../components/Button';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport socketManager from '../utils/socket';\nimport { roomsAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameRoom = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    token,\n    user\n  } = useAuthStore();\n  const {\n    players,\n    isInRoom,\n    isGameActive,\n    currentRound,\n    totalRounds,\n    timeRemaining,\n    currentWord,\n    isDrawing,\n    drawingData,\n    chatMessages,\n    guessInput,\n    isSocketConnected,\n    isLoading,\n    error,\n    joinRoom,\n    leaveRoom,\n    deleteRoom,\n    setPlayers,\n    addChatMessageFromSocket,\n    addCorrectGuessMessage,\n    setGuessInput,\n    sendGuess,\n    sendChatMessage,\n    startGame,\n    setReady,\n    skipTurn,\n    resetGameState,\n    handleSocketConnected,\n    handleAuthenticated,\n    handleRoomJoined,\n    handlePlayerJoined,\n    handlePlayerLeft,\n    handleGameStarted,\n    handleRoundStarted,\n    handleWordAssigned,\n    handleCorrectGuess,\n    handleRoundEnded,\n    handleGameEnded,\n    handleTimeUpdate,\n    handleCanvasCleared,\n    handleRoomDeleted\n  } = useGameStore();\n  const [isReady, setIsReady] = useState(false);\n\n  // Socket event handlers\n  const handleSocketConnectedEvent = useCallback(data => {\n    handleSocketConnected(data);\n  }, [handleSocketConnected]);\n  const handleAuthenticatedEvent = useCallback(data => {\n    handleAuthenticated(data);\n  }, [handleAuthenticated]);\n  const handleRoomJoinedEvent = useCallback(data => {\n    handleRoomJoined(data);\n    toast.success('Joined room successfully!');\n  }, [handleRoomJoined]);\n  const handlePlayerJoinedEvent = useCallback(data => {\n    handlePlayerJoined(data);\n    toast.info(`${data.username} joined the room`);\n  }, [handlePlayerJoined]);\n  const handlePlayerLeftEvent = useCallback(data => {\n    handlePlayerLeft(data);\n    toast.info(`${data.username} left the room`);\n  }, [handlePlayerLeft]);\n  const handleGameStartedEvent = useCallback(data => {\n    handleGameStarted(data);\n    toast.success('Game started!');\n  }, [handleGameStarted]);\n  const handleRoundStartedEvent = useCallback(data => {\n    handleRoundStarted(data);\n    toast.success(`Round ${data.round} started!`);\n  }, [handleRoundStarted]);\n  const handleWordAssignedEvent = useCallback(data => {\n    handleWordAssigned(data);\n    if (data.word && data.word !== '_' * data.word.length) {\n      toast.success(`Your word: ${data.word}`);\n    }\n  }, [handleWordAssigned]);\n  const handleCorrectGuessEvent = useCallback(data => {\n    handleCorrectGuess(data);\n    addCorrectGuessMessage(data);\n    toast.success(`${data.username} guessed correctly!`);\n  }, [handleCorrectGuess, addCorrectGuessMessage]);\n  const handleRoundEndedEvent = useCallback(data => {\n    handleRoundEnded(data);\n    toast.info(`Round ${data.round} ended! Word was: ${data.word}`);\n  }, [handleRoundEnded]);\n  const handleGameEndedEvent = useCallback(data => {\n    handleGameEnded(data);\n    toast.success('Game ended!');\n  }, [handleGameEnded]);\n  const handleTimeUpdateEvent = useCallback(data => {\n    handleTimeUpdate(data);\n  }, [handleTimeUpdate]);\n  const handleCanvasClearedEvent = useCallback(data => {\n    handleCanvasCleared(data);\n    toast.info('Canvas cleared');\n  }, [handleCanvasCleared]);\n  const handleRoomDeletedEvent = useCallback(data => {\n    handleRoomDeleted(data);\n    toast.warning('Room has been deleted');\n    navigate('/dashboard');\n  }, [handleRoomDeleted, navigate]);\n  const handleChatMessageEvent = useCallback(data => {\n    addChatMessageFromSocket(data);\n  }, [addChatMessageFromSocket]);\n  const handleDrawDataEvent = useCallback(data => {\n    // Drawing data is handled by the DrawingCanvas component\n    console.log('Draw data received:', data);\n  }, []);\n  const handleGameStateEvent = useCallback(data => {\n    // Game state updates are handled by the store\n    console.log('Game state update:', data);\n  }, []);\n\n  // Game controls\n  const handleStartGame = () => {\n    startGame();\n  };\n  const handleReadyToggle = () => {\n    const newReadyState = !isReady;\n    setIsReady(newReadyState);\n    setReady(newReadyState);\n  };\n  const handleSkipTurn = () => {\n    skipTurn();\n  };\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/dashboard');\n  };\n  const handleDeleteRoom = () => {\n    if (window.confirm('Are you sure you want to delete this room? All players will be disconnected.')) {\n      deleteRoom();\n      navigate('/dashboard');\n    }\n  };\n  const handleSendMessage = message => {\n    sendChatMessage(message);\n  };\n  const handleSendGuess = () => {\n    sendGuess();\n  };\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = isDrawing;\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    console.log('GameRoom: Setting up socket connection...');\n\n    // Connect to socket\n    socketManager.connect(token);\n\n    // Join room\n    joinRoom(parseInt(roomId));\n\n    // Register all event listeners\n    socketManager.on('socket_connected', handleSocketConnectedEvent);\n    socketManager.on('authenticated', handleAuthenticatedEvent);\n    socketManager.on('room_joined', handleRoomJoinedEvent);\n    socketManager.on('player_joined', handlePlayerJoinedEvent);\n    socketManager.on('player_left', handlePlayerLeftEvent);\n    socketManager.on('chat_message', handleChatMessageEvent);\n    socketManager.on('game_started', handleGameStartedEvent);\n    socketManager.on('round_started', handleRoundStartedEvent);\n    socketManager.on('correct_guess', handleCorrectGuessEvent);\n    socketManager.on('round_ended', handleRoundEndedEvent);\n    socketManager.on('game_ended', handleGameEndedEvent);\n    socketManager.on('time_update', handleTimeUpdateEvent);\n    socketManager.on('word_assigned', handleWordAssignedEvent);\n    socketManager.on('game_state', handleGameStateEvent);\n    socketManager.on('canvas_cleared', handleCanvasClearedEvent);\n    socketManager.on('draw_data', handleDrawDataEvent);\n    socketManager.on('room_deleted', handleRoomDeletedEvent);\n\n    // Initial fetch of players\n    const fetchPlayers = async () => {\n      try {\n        const response = await roomsAPI.getRoomPlayers(roomId);\n        if (response.data && response.data.players) {\n          setPlayers(response.data.players);\n        }\n      } catch (err) {\n        console.error('Failed to fetch players:', err);\n      }\n    };\n    fetchPlayers();\n\n    // Cleanup on unmount\n    return () => {\n      socketManager.off('socket_connected', handleSocketConnectedEvent);\n      socketManager.off('authenticated', handleAuthenticatedEvent);\n      socketManager.off('room_joined', handleRoomJoinedEvent);\n      socketManager.off('player_joined', handlePlayerJoinedEvent);\n      socketManager.off('player_left', handlePlayerLeftEvent);\n      socketManager.off('chat_message', handleChatMessageEvent);\n      socketManager.off('game_started', handleGameStartedEvent);\n      socketManager.off('round_started', handleRoundStartedEvent);\n      socketManager.off('correct_guess', handleCorrectGuessEvent);\n      socketManager.off('round_ended', handleRoundEndedEvent);\n      socketManager.off('game_ended', handleGameEndedEvent);\n      socketManager.off('time_update', handleTimeUpdateEvent);\n      socketManager.off('word_assigned', handleWordAssignedEvent);\n      socketManager.off('game_state', handleGameStateEvent);\n      socketManager.off('canvas_cleared', handleCanvasClearedEvent);\n      socketManager.off('draw_data', handleDrawDataEvent);\n      socketManager.off('room_deleted', handleRoomDeletedEvent);\n    };\n  }, [token, roomId, navigate, joinRoom, setPlayers, handleSocketConnectedEvent, handleAuthenticatedEvent, handleRoomJoinedEvent, handlePlayerJoinedEvent, handlePlayerLeftEvent, handleChatMessageEvent, handleGameStartedEvent, handleRoundStartedEvent, handleCorrectGuessEvent, handleRoundEndedEvent, handleGameEndedEvent, handleTimeUpdateEvent, handleWordAssignedEvent, handleGameStateEvent, handleCanvasClearedEvent, handleDrawDataEvent, handleRoomDeletedEvent]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: \"Loading room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-xl\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-800\",\n              children: [\"Room \", roomId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4 text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Players: \", players.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Round: \", currentRound, \"/\", totalRounds]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), isGameActive && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Time: \", timeRemaining, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 34\n              }, this), isSocketConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-500\",\n                children: \"\\u25CF Connected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500\",\n                children: \"\\u25CF Disconnected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [!isGameActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReadyToggle,\n                variant: isReady ? 'success' : 'secondary',\n                children: isReady ? 'Ready' : 'Not Ready'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleStartGame,\n                variant: \"primary\",\n                children: \"Start Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), isGameActive && isCurrentDrawer && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSkipTurn,\n              variant: \"warning\",\n              children: \"Skip Turn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleLeaveRoom,\n              variant: \"secondary\",\n              children: \"Leave Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleDeleteRoom,\n              variant: \"danger\",\n              children: \"Delete Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold mb-4\",\n              children: \"Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between p-2 bg-gray-50 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: player.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this), player.ready && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-green-500 text-sm\",\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [player.score || 0, \" pts\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this)]\n              }, player.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold mb-2\",\n                children: \"Drawing Canvas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-2\",\n                children: isCurrentDrawer ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Your turn to draw! Word: \", currentWord]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Waiting for drawing... Word: \", currentWord]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DrawingCanvas, {\n              width: 800,\n              height: 600\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: /*#__PURE__*/_jsxDEV(ChatBox, {\n            messages: chatMessages,\n            onSendMessage: handleSendMessage,\n            guessInput: guessInput,\n            onGuessInputChange: setGuessInput,\n            onSendGuess: handleSendGuess,\n            isGameActive: isGameActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"KvALrX0w1DrjlcPD6ES3THotpBc=\", false, function () {\n  return [useParams, useNavigate, useAuthStore, useGameStore];\n});\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useParams","useNavigate","toast","DrawingCanvas","ChatBox","Button","useGameStore","useAuthStore","socketManager","roomsAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","GameRoom","_s","roomId","navigate","token","user","players","isInRoom","isGameActive","currentRound","totalRounds","timeRemaining","currentWord","isDrawing","drawingData","chatMessages","guessInput","isSocketConnected","isLoading","error","joinRoom","leaveRoom","deleteRoom","setPlayers","addChatMessageFromSocket","addCorrectGuessMessage","setGuessInput","sendGuess","sendChatMessage","startGame","setReady","skipTurn","resetGameState","handleSocketConnected","handleAuthenticated","handleRoomJoined","handlePlayerJoined","handlePlayerLeft","handleGameStarted","handleRoundStarted","handleWordAssigned","handleCorrectGuess","handleRoundEnded","handleGameEnded","handleTimeUpdate","handleCanvasCleared","handleRoomDeleted","isReady","setIsReady","handleSocketConnectedEvent","data","handleAuthenticatedEvent","handleRoomJoinedEvent","success","handlePlayerJoinedEvent","info","username","handlePlayerLeftEvent","handleGameStartedEvent","handleRoundStartedEvent","round","handleWordAssignedEvent","word","length","handleCorrectGuessEvent","handleRoundEndedEvent","handleGameEndedEvent","handleTimeUpdateEvent","handleCanvasClearedEvent","handleRoomDeletedEvent","warning","handleChatMessageEvent","handleDrawDataEvent","console","log","handleGameStateEvent","handleStartGame","handleReadyToggle","newReadyState","handleSkipTurn","handleLeaveRoom","handleDeleteRoom","window","confirm","handleSendMessage","message","handleSendGuess","isCurrentDrawer","connect","parseInt","on","fetchPlayers","response","getRoomPlayers","err","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","map","player","ready","score","id","width","height","messages","onSendMessage","onGuessInputChange","onSendGuess","_c","$RefreshReg$"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/pages/GameRoom.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport DrawingCanvas from '../components/DrawingCanvas';\nimport ChatBox from '../components/ChatBox';\nimport Button from '../components/Button';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport socketManager from '../utils/socket';\nimport { roomsAPI } from '../utils/api';\n\nconst GameRoom = () => {\n  const { roomId } = useParams();\n  const navigate = useNavigate();\n  const { token, user } = useAuthStore();\n  const {\n    players,\n    isInRoom,\n    isGameActive,\n    currentRound,\n    totalRounds,\n    timeRemaining,\n    currentWord,\n    isDrawing,\n    drawingData,\n    chatMessages,\n    guessInput,\n    isSocketConnected,\n    isLoading,\n    error,\n    joinRoom,\n    leaveRoom,\n    deleteRoom,\n    setPlayers,\n    addChatMessageFromSocket,\n    addCorrectGuessMessage,\n    setGuessInput,\n    sendGuess,\n    sendChatMessage,\n    startGame,\n    setReady,\n    skipTurn,\n    resetGameState,\n    handleSocketConnected,\n    handleAuthenticated,\n    handleRoomJoined,\n    handlePlayerJoined,\n    handlePlayerLeft,\n    handleGameStarted,\n    handleRoundStarted,\n    handleWordAssigned,\n    handleCorrectGuess,\n    handleRoundEnded,\n    handleGameEnded,\n    handleTimeUpdate,\n    handleCanvasCleared,\n    handleRoomDeleted,\n  } = useGameStore();\n\n  const [isReady, setIsReady] = useState(false);\n\n  // Socket event handlers\n  const handleSocketConnectedEvent = useCallback((data) => {\n    handleSocketConnected(data);\n  }, [handleSocketConnected]);\n\n  const handleAuthenticatedEvent = useCallback((data) => {\n    handleAuthenticated(data);\n  }, [handleAuthenticated]);\n\n  const handleRoomJoinedEvent = useCallback((data) => {\n    handleRoomJoined(data);\n    toast.success('Joined room successfully!');\n  }, [handleRoomJoined]);\n\n  const handlePlayerJoinedEvent = useCallback((data) => {\n    handlePlayerJoined(data);\n    toast.info(`${data.username} joined the room`);\n  }, [handlePlayerJoined]);\n\n  const handlePlayerLeftEvent = useCallback((data) => {\n    handlePlayerLeft(data);\n    toast.info(`${data.username} left the room`);\n  }, [handlePlayerLeft]);\n\n  const handleGameStartedEvent = useCallback((data) => {\n    handleGameStarted(data);\n    toast.success('Game started!');\n  }, [handleGameStarted]);\n\n  const handleRoundStartedEvent = useCallback((data) => {\n    handleRoundStarted(data);\n    toast.success(`Round ${data.round} started!`);\n  }, [handleRoundStarted]);\n\n  const handleWordAssignedEvent = useCallback((data) => {\n    handleWordAssigned(data);\n    if (data.word && data.word !== '_' * data.word.length) {\n      toast.success(`Your word: ${data.word}`);\n    }\n  }, [handleWordAssigned]);\n\n  const handleCorrectGuessEvent = useCallback((data) => {\n    handleCorrectGuess(data);\n    addCorrectGuessMessage(data);\n    toast.success(`${data.username} guessed correctly!`);\n  }, [handleCorrectGuess, addCorrectGuessMessage]);\n\n  const handleRoundEndedEvent = useCallback((data) => {\n    handleRoundEnded(data);\n    toast.info(`Round ${data.round} ended! Word was: ${data.word}`);\n  }, [handleRoundEnded]);\n\n  const handleGameEndedEvent = useCallback((data) => {\n    handleGameEnded(data);\n    toast.success('Game ended!');\n  }, [handleGameEnded]);\n\n  const handleTimeUpdateEvent = useCallback((data) => {\n    handleTimeUpdate(data);\n  }, [handleTimeUpdate]);\n\n  const handleCanvasClearedEvent = useCallback((data) => {\n    handleCanvasCleared(data);\n    toast.info('Canvas cleared');\n  }, [handleCanvasCleared]);\n\n  const handleRoomDeletedEvent = useCallback((data) => {\n    handleRoomDeleted(data);\n    toast.warning('Room has been deleted');\n    navigate('/dashboard');\n  }, [handleRoomDeleted, navigate]);\n\n  const handleChatMessageEvent = useCallback((data) => {\n    addChatMessageFromSocket(data);\n  }, [addChatMessageFromSocket]);\n\n  const handleDrawDataEvent = useCallback((data) => {\n    // Drawing data is handled by the DrawingCanvas component\n    console.log('Draw data received:', data);\n  }, []);\n\n  const handleGameStateEvent = useCallback((data) => {\n    // Game state updates are handled by the store\n    console.log('Game state update:', data);\n  }, []);\n\n  // Game controls\n  const handleStartGame = () => {\n    startGame();\n  };\n\n  const handleReadyToggle = () => {\n    const newReadyState = !isReady;\n    setIsReady(newReadyState);\n    setReady(newReadyState);\n  };\n\n  const handleSkipTurn = () => {\n    skipTurn();\n  };\n\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/dashboard');\n  };\n\n  const handleDeleteRoom = () => {\n    if (window.confirm('Are you sure you want to delete this room? All players will be disconnected.')) {\n      deleteRoom();\n      navigate('/dashboard');\n    }\n  };\n\n  const handleSendMessage = (message) => {\n    sendChatMessage(message);\n  };\n\n  const handleSendGuess = () => {\n    sendGuess();\n  };\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = isDrawing;\n\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    console.log('GameRoom: Setting up socket connection...');\n\n    // Connect to socket\n    socketManager.connect(token);\n\n    // Join room\n    joinRoom(parseInt(roomId));\n\n    // Register all event listeners\n    socketManager.on('socket_connected', handleSocketConnectedEvent);\n    socketManager.on('authenticated', handleAuthenticatedEvent);\n    socketManager.on('room_joined', handleRoomJoinedEvent);\n    socketManager.on('player_joined', handlePlayerJoinedEvent);\n    socketManager.on('player_left', handlePlayerLeftEvent);\n    socketManager.on('chat_message', handleChatMessageEvent);\n    socketManager.on('game_started', handleGameStartedEvent);\n    socketManager.on('round_started', handleRoundStartedEvent);\n    socketManager.on('correct_guess', handleCorrectGuessEvent);\n    socketManager.on('round_ended', handleRoundEndedEvent);\n    socketManager.on('game_ended', handleGameEndedEvent);\n    socketManager.on('time_update', handleTimeUpdateEvent);\n    socketManager.on('word_assigned', handleWordAssignedEvent);\n    socketManager.on('game_state', handleGameStateEvent);\n    socketManager.on('canvas_cleared', handleCanvasClearedEvent);\n    socketManager.on('draw_data', handleDrawDataEvent);\n    socketManager.on('room_deleted', handleRoomDeletedEvent);\n\n    // Initial fetch of players\n    const fetchPlayers = async () => {\n      try {\n        const response = await roomsAPI.getRoomPlayers(roomId);\n        if (response.data && response.data.players) {\n          setPlayers(response.data.players);\n        }\n      } catch (err) {\n        console.error('Failed to fetch players:', err);\n      }\n    };\n    fetchPlayers();\n\n    // Cleanup on unmount\n    return () => {\n      socketManager.off('socket_connected', handleSocketConnectedEvent);\n      socketManager.off('authenticated', handleAuthenticatedEvent);\n      socketManager.off('room_joined', handleRoomJoinedEvent);\n      socketManager.off('player_joined', handlePlayerJoinedEvent);\n      socketManager.off('player_left', handlePlayerLeftEvent);\n      socketManager.off('chat_message', handleChatMessageEvent);\n      socketManager.off('game_started', handleGameStartedEvent);\n      socketManager.off('round_started', handleRoundStartedEvent);\n      socketManager.off('correct_guess', handleCorrectGuessEvent);\n      socketManager.off('round_ended', handleRoundEndedEvent);\n      socketManager.off('game_ended', handleGameEndedEvent);\n      socketManager.off('time_update', handleTimeUpdateEvent);\n      socketManager.off('word_assigned', handleWordAssignedEvent);\n      socketManager.off('game_state', handleGameStateEvent);\n      socketManager.off('canvas_cleared', handleCanvasClearedEvent);\n      socketManager.off('draw_data', handleDrawDataEvent);\n      socketManager.off('room_deleted', handleRoomDeletedEvent);\n    };\n  }, [\n    token,\n    roomId,\n    navigate,\n    joinRoom,\n    setPlayers,\n    handleSocketConnectedEvent,\n    handleAuthenticatedEvent,\n    handleRoomJoinedEvent,\n    handlePlayerJoinedEvent,\n    handlePlayerLeftEvent,\n    handleChatMessageEvent,\n    handleGameStartedEvent,\n    handleRoundStartedEvent,\n    handleCorrectGuessEvent,\n    handleRoundEndedEvent,\n    handleGameEndedEvent,\n    handleTimeUpdateEvent,\n    handleWordAssignedEvent,\n    handleGameStateEvent,\n    handleCanvasClearedEvent,\n    handleDrawDataEvent,\n    handleRoomDeletedEvent,\n  ]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-xl\">Loading room...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-red-500 text-xl\">Error: {error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-800\">Room {roomId}</h1>\n              <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                <span>Players: {players.length}</span>\n                <span>Round: {currentRound}/{totalRounds}</span>\n                {isGameActive && <span>Time: {timeRemaining}s</span>}\n                {isSocketConnected ? (\n                  <span className=\"text-green-500\">● Connected</span>\n                ) : (\n                  <span className=\"text-red-500\">● Disconnected</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              {!isGameActive && (\n                <>\n                  <Button\n                    onClick={handleReadyToggle}\n                    variant={isReady ? 'success' : 'secondary'}\n                  >\n                    {isReady ? 'Ready' : 'Not Ready'}\n                  </Button>\n                  <Button onClick={handleStartGame} variant=\"primary\">\n                    Start Game\n                  </Button>\n                </>\n              )}\n              {isGameActive && isCurrentDrawer && (\n                <Button onClick={handleSkipTurn} variant=\"warning\">\n                  Skip Turn\n                </Button>\n              )}\n              <Button onClick={handleLeaveRoom} variant=\"secondary\">\n                Leave Room\n              </Button>\n              <Button onClick={handleDeleteRoom} variant=\"danger\">\n                Delete Room\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\n          {/* Players Panel */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <h2 className=\"text-lg font-semibold mb-4\">Players</h2>\n              <div className=\"space-y-2\">\n                {players.map((player) => (\n                  <div\n                    key={player.id}\n                    className=\"flex items-center justify-between p-2 bg-gray-50 rounded\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">{player.username}</span>\n                      {player.ready && (\n                        <span className=\"text-green-500 text-sm\">✓</span>\n                      )}\n                    </div>\n                    <span className=\"text-sm text-gray-600\">\n                      {player.score || 0} pts\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Game Area */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <div className=\"mb-4\">\n                <h2 className=\"text-lg font-semibold mb-2\">Drawing Canvas</h2>\n                {isGameActive && (\n                  <div className=\"text-sm text-gray-600 mb-2\">\n                    {isCurrentDrawer ? (\n                      <span>Your turn to draw! Word: {currentWord}</span>\n                    ) : (\n                      <span>Waiting for drawing... Word: {currentWord}</span>\n                    )}\n                  </div>\n                )}\n              </div>\n              <DrawingCanvas width={800} height={600} />\n            </div>\n          </div>\n\n          {/* Chat Panel */}\n          <div className=\"lg:col-span-1\">\n            <ChatBox\n              messages={chatMessages}\n              onSendMessage={handleSendMessage}\n              guessInput={guessInput}\n              onGuessInputChange={setGuessInput}\n              onSendGuess={handleSendGuess}\n              isGameActive={isGameActive}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}