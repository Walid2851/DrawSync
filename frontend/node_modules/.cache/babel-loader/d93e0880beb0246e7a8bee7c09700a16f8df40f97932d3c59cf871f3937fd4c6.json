{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  width = 800,\n  height = 600\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n  const {\n    user\n  } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = (gameState === null || gameState === void 0 ? void 0 : gameState.current_drawer_id) === (user === null || user === void 0 ? void 0 : user.id) || false;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round or drawing data is cleared\n  useEffect(() => {\n    if (isGameActive && gameState !== null && gameState !== void 0 && gameState.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState === null || gameState === void 0 ? void 0 : gameState.current_round, isGameActive]);\n\n  // Clear canvas when drawing data is cleared\n  useEffect(() => {\n    if (drawingData.length === 0 && isGameActive) {\n      clearCanvas();\n    }\n  }, [drawingData.length, isGameActive]);\n\n  // Draw received drawing data\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Group drawing data by user to handle strokes properly\n    const strokesByUser = {};\n    drawingData.forEach(data => {\n      if (!strokesByUser[data.user_id]) {\n        strokesByUser[data.user_id] = [];\n      }\n      strokesByUser[data.user_id].push(data);\n    });\n\n    // Draw each user's strokes\n    Object.values(strokesByUser).forEach(userStrokes => {\n      if (userStrokes.length < 2) return;\n\n      // Sort strokes by timestamp or order\n      const sortedStrokes = userStrokes.sort((a, b) => {\n        return (a.timestamp || 0) - (b.timestamp || 0);\n      });\n\n      // Draw the stroke\n      ctx.strokeStyle = sortedStrokes[0].color || '#000000';\n      ctx.lineWidth = sortedStrokes[0].brush_size || 2;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n\n      // Start from the first point\n      ctx.moveTo(sortedStrokes[0].x, sortedStrokes[0].y);\n\n      // Draw lines to subsequent points\n      for (let i = 1; i < sortedStrokes.length; i++) {\n        const stroke = sortedStrokes[i];\n        if (stroke.is_drawing) {\n          ctx.lineTo(stroke.x, stroke.y);\n        } else {\n          // If not drawing, start a new path\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.moveTo(stroke.x, stroke.y);\n        }\n      }\n      ctx.stroke();\n    });\n  }, [drawingData]);\n  const getMousePos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const getTouchPos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{\n      x,\n      y,\n      is_drawing: true\n    }]);\n  }, [isGameActive, isCurrentDrawer]);\n  const draw = useCallback((x, y) => {\n    if (!isDrawing || !isGameActive || !isCurrentDrawer) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.strokeStyle = brushColor;\n    ctx.lineWidth = brushSize;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, {\n      x,\n      y,\n      is_drawing: true\n    }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n    addDrawingData(drawData);\n    setLastX(x);\n    setLastY(y);\n  }, [isDrawing, isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData]);\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(false);\n\n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData]);\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n  }, [width, height]);\n\n  // Mouse events\n  const handleMouseDown = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n  const handleMouseMove = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw]);\n  const handleMouseUp = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  const handleMouseLeave = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n  const handleTouchMove = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: `border-2 border-gray-300 rounded-lg bg-white ${isCurrentDrawer && isGameActive ? 'cursor-crosshair' : 'cursor-not-allowed'}`,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        width: `${width}px`,\n        height: `${height}px`,\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), !isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-lg font-medium\",\n        children: \"Game not started yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), isGameActive && !isCurrentDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-lg font-medium\",\n        children: gameState !== null && gameState !== void 0 && gameState.current_drawer_id ? `Waiting for ${gameState.current_drawer_id === (user === null || user === void 0 ? void 0 : user.id) ? 'you' : 'someone'} to draw...` : 'Waiting for drawer...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this), isCurrentDrawer && isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 bg-white bg-opacity-90 p-3 rounded-lg shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => useGameStore.getState().setBrushColor(e.target.value),\n            className: \"w-8 h-8 border rounded cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: brushSize,\n            onChange: e => useGameStore.getState().setBrushSize(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: brushSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"kFx79WCD49AnHz1GD8kpTzHtp3U=\", false, function () {\n  return [useAuthStore, useGameStore];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useGameStore","useAuthStore","jsxDEV","_jsxDEV","DrawingCanvas","width","height","_s","canvasRef","isDrawing","setIsDrawing","lastX","setLastX","lastY","setLastY","currentStroke","setCurrentStroke","user","isDrawingMode","brushColor","brushSize","drawingData","addDrawingData","sendDrawData","currentDrawer","isGameActive","gameState","clearDrawing","isCurrentDrawer","current_drawer_id","id","canvas","current","ctx","getContext","fillStyle","fillRect","lineCap","lineJoin","current_round","clearCanvas","length","strokesByUser","forEach","data","user_id","push","Object","values","userStrokes","sortedStrokes","sort","a","b","timestamp","strokeStyle","color","lineWidth","brush_size","beginPath","moveTo","x","y","i","stroke","is_drawing","lineTo","getMousePos","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","getTouchPos","touch","touches","startDrawing","draw","prev","drawData","stopDrawing","handleMouseDown","preventDefault","pos","handleMouseMove","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchMove","handleTouchEnd","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","style","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","getState","setBrushColor","target","min","max","setBrushSize","parseInt","onClick","_c","$RefreshReg$"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\n\nconst DrawingCanvas = ({ width = 800, height = 600 }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n\n  const { user } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing,\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = gameState?.current_drawer_id === user?.id || false;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    \n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round or drawing data is cleared\n  useEffect(() => {\n    if (isGameActive && gameState?.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState?.current_round, isGameActive]);\n\n  // Clear canvas when drawing data is cleared\n  useEffect(() => {\n    if (drawingData.length === 0 && isGameActive) {\n      clearCanvas();\n    }\n  }, [drawingData.length, isGameActive]);\n\n  // Draw received drawing data\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Group drawing data by user to handle strokes properly\n    const strokesByUser = {};\n    \n    drawingData.forEach((data) => {\n      if (!strokesByUser[data.user_id]) {\n        strokesByUser[data.user_id] = [];\n      }\n      strokesByUser[data.user_id].push(data);\n    });\n    \n    // Draw each user's strokes\n    Object.values(strokesByUser).forEach((userStrokes) => {\n      if (userStrokes.length < 2) return;\n      \n      // Sort strokes by timestamp or order\n      const sortedStrokes = userStrokes.sort((a, b) => {\n        return (a.timestamp || 0) - (b.timestamp || 0);\n      });\n      \n      // Draw the stroke\n      ctx.strokeStyle = sortedStrokes[0].color || '#000000';\n      ctx.lineWidth = sortedStrokes[0].brush_size || 2;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      \n      // Start from the first point\n      ctx.moveTo(sortedStrokes[0].x, sortedStrokes[0].y);\n      \n      // Draw lines to subsequent points\n      for (let i = 1; i < sortedStrokes.length; i++) {\n        const stroke = sortedStrokes[i];\n        if (stroke.is_drawing) {\n          ctx.lineTo(stroke.x, stroke.y);\n        } else {\n          // If not drawing, start a new path\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.moveTo(stroke.x, stroke.y);\n        }\n      }\n      \n      ctx.stroke();\n    });\n  }, [drawingData]);\n\n  const getMousePos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const getTouchPos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{ x, y, is_drawing: true }]);\n  }, [isGameActive, isCurrentDrawer]);\n\n  const draw = useCallback((x, y) => {\n    if (!isDrawing || !isGameActive || !isCurrentDrawer) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    ctx.strokeStyle = brushColor;\n    ctx.lineWidth = brushSize;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, { x, y, is_drawing: true }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    addDrawingData(drawData);\n\n    setLastX(x);\n    setLastY(y);\n  }, [isDrawing, isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData]);\n\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(false);\n    \n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData]);\n\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n  }, [width, height]);\n\n  // Mouse events\n  const handleMouseDown = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n\n  const handleMouseMove = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw]);\n\n  const handleMouseUp = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  const handleMouseLeave = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n\n  const handleTouchMove = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  return (\n    <div className=\"relative\">\n      <canvas\n        ref={canvasRef}\n        className={`border-2 border-gray-300 rounded-lg bg-white ${\n          isCurrentDrawer && isGameActive ? 'cursor-crosshair' : 'cursor-not-allowed'\n        }`}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n          maxWidth: '100%',\n          maxHeight: '100%',\n        }}\n      />\n      \n      {!isGameActive && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\">\n          <p className=\"text-white text-lg font-medium\">\n            Game not started yet\n          </p>\n        </div>\n      )}\n      \n      {isGameActive && !isCurrentDrawer && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 rounded-lg\">\n          <p className=\"text-white text-lg font-medium\">\n            {gameState?.current_drawer_id ? \n              `Waiting for ${gameState.current_drawer_id === user?.id ? 'you' : 'someone'} to draw...` : \n              'Waiting for drawer...'\n            }\n          </p>\n        </div>\n      )}\n\n      {/* Drawing controls for current drawer */}\n      {isCurrentDrawer && isGameActive && (\n        <div className=\"absolute top-4 left-4 bg-white bg-opacity-90 p-3 rounded-lg shadow-lg\">\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium\">Color:</label>\n              <input\n                type=\"color\"\n                value={brushColor}\n                onChange={(e) => useGameStore.getState().setBrushColor(e.target.value)}\n                className=\"w-8 h-8 border rounded cursor-pointer\"\n              />\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium\">Size:</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                value={brushSize}\n                onChange={(e) => useGameStore.getState().setBrushSize(parseInt(e.target.value))}\n                className=\"w-20\"\n              />\n              <span className=\"text-xs\">{brushSize}</span>\n            </div>\n            <button\n              onClick={clearCanvas}\n              className=\"px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600\"\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrawingCanvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}