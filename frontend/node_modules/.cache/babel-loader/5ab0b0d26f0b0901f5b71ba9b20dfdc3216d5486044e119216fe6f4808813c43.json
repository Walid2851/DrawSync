{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  width = 800,\n  height = 600\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n  const {\n    user\n  } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = (gameState === null || gameState === void 0 ? void 0 : gameState.current_drawer_id) === (user === null || user === void 0 ? void 0 : user.id) || false;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round\n  useEffect(() => {\n    if (isGameActive && gameState !== null && gameState !== void 0 && gameState.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState === null || gameState === void 0 ? void 0 : gameState.current_round, isGameActive]);\n\n  // Draw received drawing data\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    drawingData.forEach(data => {\n      if (data.is_drawing) {\n        ctx.strokeStyle = data.color;\n        ctx.lineWidth = data.brush_size;\n        ctx.beginPath();\n        ctx.moveTo(data.x, data.y);\n        ctx.lineTo(data.x, data.y);\n        ctx.stroke();\n      }\n    });\n  }, [drawingData]);\n  const getMousePos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const getTouchPos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{\n      x,\n      y,\n      is_drawing: true\n    }]);\n  }, [isGameActive, isCurrentDrawer]);\n  const draw = useCallback((x, y) => {\n    if (!isDrawing || !isGameActive || !isCurrentDrawer) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.strokeStyle = brushColor;\n    ctx.lineWidth = brushSize;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, {\n      x,\n      y,\n      is_drawing: true\n    }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n    addDrawingData(drawData);\n    setLastX(x);\n    setLastY(y);\n  }, [isDrawing, isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData]);\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(false);\n\n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData]);\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n  }, [width, height]);\n\n  // Mouse events\n  const handleMouseDown = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n  const handleMouseMove = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw]);\n  const handleMouseUp = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  const handleMouseLeave = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n  const handleTouchMove = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: `border-2 border-gray-300 rounded-lg bg-white ${isCurrentDrawer && isGameActive ? 'cursor-crosshair' : 'cursor-not-allowed'}`,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        width: `${width}px`,\n        height: `${height}px`,\n        maxWidth: '100%',\n        maxHeight: '100%',\n        pointerEvents: isCurrentDrawer && isGameActive ? 'auto' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), !isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-lg font-medium\",\n        children: \"Game not started yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), isCurrentDrawer && isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 bg-white bg-opacity-90 p-3 rounded-lg shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => useGameStore.getState().setBrushColor(e.target.value),\n            className: \"w-8 h-8 border rounded cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: brushSize,\n            onChange: e => useGameStore.getState().setBrushSize(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: brushSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"Nv6Hgtfn5PZehXEBaopuDgpg2NU=\", false, function () {\n  return [useAuthStore, useGameStore];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useGameStore","useAuthStore","jsxDEV","_jsxDEV","DrawingCanvas","width","height","_s","canvasRef","isDrawing","setIsDrawing","lastX","setLastX","lastY","setLastY","currentStroke","setCurrentStroke","user","isDrawingMode","brushColor","brushSize","drawingData","addDrawingData","sendDrawData","currentDrawer","isGameActive","gameState","clearDrawing","isCurrentDrawer","current_drawer_id","id","canvas","current","ctx","getContext","fillStyle","fillRect","lineCap","lineJoin","current_round","clearCanvas","forEach","data","is_drawing","strokeStyle","color","lineWidth","brush_size","beginPath","moveTo","x","y","lineTo","stroke","getMousePos","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","getTouchPos","touch","touches","startDrawing","draw","prev","drawData","stopDrawing","handleMouseDown","preventDefault","pos","handleMouseMove","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchMove","handleTouchEnd","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","style","maxWidth","maxHeight","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","getState","setBrushColor","target","min","max","setBrushSize","parseInt","onClick","_c","$RefreshReg$"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\n\nconst DrawingCanvas = ({ width = 800, height = 600 }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n\n  const { user } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing,\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = gameState?.current_drawer_id === user?.id || false;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    \n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round\n  useEffect(() => {\n    if (isGameActive && gameState?.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState?.current_round, isGameActive]);\n\n  // Draw received drawing data\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    drawingData.forEach((data) => {\n      if (data.is_drawing) {\n        ctx.strokeStyle = data.color;\n        ctx.lineWidth = data.brush_size;\n        ctx.beginPath();\n        ctx.moveTo(data.x, data.y);\n        ctx.lineTo(data.x, data.y);\n        ctx.stroke();\n      }\n    });\n  }, [drawingData]);\n\n  const getMousePos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const getTouchPos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{ x, y, is_drawing: true }]);\n  }, [isGameActive, isCurrentDrawer]);\n\n  const draw = useCallback((x, y) => {\n    if (!isDrawing || !isGameActive || !isCurrentDrawer) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    ctx.strokeStyle = brushColor;\n    ctx.lineWidth = brushSize;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, { x, y, is_drawing: true }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    addDrawingData(drawData);\n\n    setLastX(x);\n    setLastY(y);\n  }, [isDrawing, isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData]);\n\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(false);\n    \n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData]);\n\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n  }, [width, height]);\n\n  // Mouse events\n  const handleMouseDown = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n\n  const handleMouseMove = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw]);\n\n  const handleMouseUp = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  const handleMouseLeave = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n\n  const handleTouchMove = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  return (\n    <div className=\"relative\">\n      <canvas\n        ref={canvasRef}\n        className={`border-2 border-gray-300 rounded-lg bg-white ${\n          isCurrentDrawer && isGameActive ? 'cursor-crosshair' : 'cursor-not-allowed'\n        }`}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n          maxWidth: '100%',\n          maxHeight: '100%',\n          pointerEvents: isCurrentDrawer && isGameActive ? 'auto' : 'none',\n        }}\n      />\n      \n      {/* Only show overlay if game is NOT active */}\n      {!isGameActive && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\">\n          <p className=\"text-white text-lg font-medium\">\n            Game not started yet\n          </p>\n        </div>\n      )}\n\n      {/* Drawing controls for current drawer */}\n      {isCurrentDrawer && isGameActive && (\n        <div className=\"absolute top-4 left-4 bg-white bg-opacity-90 p-3 rounded-lg shadow-lg\">\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium\">Color:</label>\n              <input\n                type=\"color\"\n                value={brushColor}\n                onChange={(e) => useGameStore.getState().setBrushColor(e.target.value)}\n                className=\"w-8 h-8 border rounded cursor-pointer\"\n              />\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm font-medium\">Size:</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                value={brushSize}\n                onChange={(e) => useGameStore.getState().setBrushSize(parseInt(e.target.value))}\n                className=\"w-20\"\n              />\n              <span className=\"text-xs\">{brushSize}</span>\n            </div>\n            <button\n              onClick={clearCanvas}\n              className=\"px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600\"\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrawingCanvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}