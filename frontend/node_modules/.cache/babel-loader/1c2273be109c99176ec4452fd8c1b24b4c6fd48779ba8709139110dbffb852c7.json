{"ast":null,"code":"var _jsxFileName = \"/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Palette, Eraser, RotateCcw, Settings } from 'lucide-react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  width = 800,\n  height = 600\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n  const [lastDrawingDataLength, setLastDrawingDataLength] = useState(0);\n  const {\n    user\n  } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing,\n    sendClearCanvas\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = (gameState === null || gameState === void 0 ? void 0 : gameState.current_drawer_id) === (user === null || user === void 0 ? void 0 : user.id) || false;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round or drawing data is cleared\n  useEffect(() => {\n    if (isGameActive && gameState !== null && gameState !== void 0 && gameState.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState === null || gameState === void 0 ? void 0 : gameState.current_round, isGameActive]);\n\n  // Clear canvas when drawing data is cleared\n  useEffect(() => {\n    if (drawingData.length === 0 && isGameActive) {\n      clearCanvas();\n    }\n  }, [drawingData.length, isGameActive]);\n\n  // Improved drawing data processing - redraw entire canvas for proper synchronization\n  useEffect(() => {\n    if (drawingData.length > 0) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Clear canvas first\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, width, height);\n\n      // Group drawing data by user to handle strokes properly\n      const strokesByUser = {};\n      drawingData.forEach(data => {\n        if (!strokesByUser[data.user_id]) {\n          strokesByUser[data.user_id] = [];\n        }\n        strokesByUser[data.user_id].push(data);\n      });\n\n      // Draw each user's strokes\n      Object.values(strokesByUser).forEach(userStrokes => {\n        if (userStrokes.length === 0) return;\n\n        // Sort strokes by timestamp\n        const sortedStrokes = userStrokes.sort((a, b) => {\n          return (a.timestamp || 0) - (b.timestamp || 0);\n        });\n\n        // Draw the stroke\n        ctx.strokeStyle = sortedStrokes[0].color || '#000000';\n        ctx.lineWidth = sortedStrokes[0].brush_size || 2;\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n        ctx.beginPath();\n        let isFirstPoint = true;\n        for (let i = 0; i < sortedStrokes.length; i++) {\n          const stroke = sortedStrokes[i];\n          if (stroke.is_drawing) {\n            if (isFirstPoint || stroke.is_first_point) {\n              ctx.moveTo(stroke.x, stroke.y);\n              isFirstPoint = false;\n            } else {\n              ctx.lineTo(stroke.x, stroke.y);\n            }\n          } else {\n            // End the current stroke\n            ctx.stroke();\n            ctx.beginPath();\n            isFirstPoint = true;\n          }\n        }\n\n        // Stroke the final path\n        if (!isFirstPoint) {\n          ctx.stroke();\n        }\n      });\n      setLastDrawingDataLength(drawingData.length);\n    }\n  }, [drawingData, width, height]);\n  const getMousePos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const getTouchPos = useCallback(e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY\n    };\n  }, []);\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{\n      x,\n      y,\n      is_drawing: true\n    }]);\n\n    // Send first point with is_first_point flag\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: true,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n\n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user === null || user === void 0 ? void 0 : user.id,\n      username: user === null || user === void 0 ? void 0 : user.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n  }, [isGameActive, isCurrentDrawer, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n  const draw = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer || !isDrawing) return;\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, {\n      x,\n      y,\n      is_drawing: true\n    }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: false,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n\n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user === null || user === void 0 ? void 0 : user.id,\n      username: user === null || user === void 0 ? void 0 : user.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n    setLastX(x);\n    setLastY(y);\n  }, [isGameActive, isCurrentDrawer, isDrawing, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    setIsDrawing(false);\n\n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize\n    };\n    sendDrawData(drawData);\n\n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user === null || user === void 0 ? void 0 : user.id,\n      username: user === null || user === void 0 ? void 0 : user.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    setLastDrawingDataLength(0);\n\n    // Send clear canvas request to server\n    if (isGameActive && isCurrentDrawer) {\n      sendClearCanvas();\n    }\n  }, [width, height, isGameActive, isCurrentDrawer, sendClearCanvas]);\n\n  // Mouse events\n  const handleMouseDown = useCallback(e => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n  const handleMouseMove = useCallback(e => {\n    e.preventDefault();\n    if (!isDrawing) return; // Only draw if mouse button is pressed\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw, isDrawing]);\n  const handleMouseUp = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n  const handleMouseLeave = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback(e => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n  const handleTouchMove = useCallback(e => {\n    e.preventDefault();\n    if (!isDrawing) return; // Only draw if touch is active\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw, isDrawing]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Add document-level mouse up handler to stop drawing when mouse is released outside canvas\n  useEffect(() => {\n    const handleDocumentMouseUp = () => {\n      if (isDrawing) {\n        stopDrawing();\n      }\n    };\n    document.addEventListener('mouseup', handleDocumentMouseUp);\n    return () => {\n      document.removeEventListener('mouseup', handleDocumentMouseUp);\n    };\n  }, [isDrawing, stopDrawing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: `w-full h-full rounded-2xl shadow-2xl border-2 border-slate-200 bg-white transition-all duration-200 ${isCurrentDrawer && isGameActive ? 'cursor-crosshair hover:border-blue-300' : 'cursor-not-allowed opacity-90'}`,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        width: `${width}px`,\n        height: `${height}px`,\n        maxWidth: '100%',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), !isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-black/50 backdrop-blur-sm rounded-2xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 bg-gradient-to-br from-slate-400 to-slate-600 rounded-2xl flex items-center justify-center mx-auto mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Palette, {\n            className: \"w-8 h-8 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-lg font-semibold\",\n          children: \"Game not started yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-300 text-sm mt-1\",\n          children: \"Wait for the game to begin to start drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this), isCurrentDrawer && isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 glass-card p-4 rounded-2xl shadow-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(Palette, {\n            className: \"w-4 h-4 text-slate-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-semibold text-slate-700\",\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => useGameStore.getState().setBrushColor(e.target.value),\n            className: \"w-8 h-8 border-2 border-slate-200 rounded-lg cursor-pointer hover:scale-110 transition-transform duration-200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            className: \"w-4 h-4 text-slate-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-semibold text-slate-700\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: brushSize,\n            onChange: e => useGameStore.getState().setBrushSize(parseInt(e.target.value)),\n            className: \"w-20 h-2 bg-slate-200 rounded-lg appearance-none cursor-pointer slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-semibold text-slate-700 min-w-[20px]\",\n            children: brushSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          className: \"flex items-center justify-center gap-2 px-3 py-2 bg-gradient-to-r from-red-500 to-pink-500 text-white text-sm font-semibold rounded-xl hover:from-red-600 hover:to-pink-600 transition-all duration-200 shadow-lg hover:shadow-xl\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), \"Clear Canvas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }, this), isCurrentDrawer && isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 glass-card px-4 py-2 rounded-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-emerald-500 rounded-full animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-semibold text-slate-700\",\n          children: \"Drawing Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this), isCurrentDrawer && isGameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 glass-card p-3 rounded-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-full border-2 border-slate-300\",\n        style: {\n          width: `${brushSize * 2}px`,\n          height: `${brushSize * 2}px`,\n          backgroundColor: brushColor,\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"tzXSGp8b2Olf/LTGVLm/IUCE9Os=\", false, function () {\n  return [useAuthStore, useGameStore];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Palette","Eraser","RotateCcw","Settings","useGameStore","useAuthStore","jsxDEV","_jsxDEV","DrawingCanvas","width","height","_s","canvasRef","isDrawing","setIsDrawing","lastX","setLastX","lastY","setLastY","currentStroke","setCurrentStroke","lastDrawingDataLength","setLastDrawingDataLength","user","isDrawingMode","brushColor","brushSize","drawingData","addDrawingData","sendDrawData","currentDrawer","isGameActive","gameState","clearDrawing","sendClearCanvas","isCurrentDrawer","current_drawer_id","id","canvas","current","ctx","getContext","fillStyle","fillRect","lineCap","lineJoin","current_round","clearCanvas","length","strokesByUser","forEach","data","user_id","push","Object","values","userStrokes","sortedStrokes","sort","a","b","timestamp","strokeStyle","color","lineWidth","brush_size","beginPath","isFirstPoint","i","stroke","is_drawing","is_first_point","moveTo","x","y","lineTo","getMousePos","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","getTouchPos","touch","touches","startDrawing","drawData","localDrawData","username","Date","now","draw","prev","stopDrawing","handleMouseDown","preventDefault","pos","handleMouseMove","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchMove","handleTouchEnd","handleDocumentMouseUp","document","addEventListener","removeEventListener","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","style","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","getState","setBrushColor","target","min","max","setBrushSize","parseInt","onClick","backgroundColor","boxShadow","_c","$RefreshReg$"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Palette, Eraser, RotateCcw, Settings } from 'lucide-react';\nimport useGameStore from '../store/gameStore';\nimport useAuthStore from '../store/authStore';\n\nconst DrawingCanvas = ({ width = 800, height = 600 }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastX, setLastX] = useState(0);\n  const [lastY, setLastY] = useState(0);\n  const [currentStroke, setCurrentStroke] = useState([]);\n  const [lastDrawingDataLength, setLastDrawingDataLength] = useState(0);\n\n  const { user } = useAuthStore();\n  const {\n    isDrawingMode,\n    brushColor,\n    brushSize,\n    drawingData,\n    addDrawingData,\n    sendDrawData,\n    currentDrawer,\n    isGameActive,\n    gameState,\n    clearDrawing,\n    sendClearCanvas,\n  } = useGameStore();\n\n  // Check if current user is the drawer\n  const isCurrentDrawer = gameState?.current_drawer_id === user?.id || false;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    \n    // Set default styles\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, [width, height]);\n\n  // Clear canvas when game starts new round or drawing data is cleared\n  useEffect(() => {\n    if (isGameActive && gameState?.current_round) {\n      clearCanvas();\n      clearDrawing();\n    }\n  }, [gameState?.current_round, isGameActive]);\n\n  // Clear canvas when drawing data is cleared\n  useEffect(() => {\n    if (drawingData.length === 0 && isGameActive) {\n      clearCanvas();\n    }\n  }, [drawingData.length, isGameActive]);\n\n  // Improved drawing data processing - redraw entire canvas for proper synchronization\n  useEffect(() => {\n    if (drawingData.length > 0) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      \n      // Clear canvas first\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, width, height);\n      \n      // Group drawing data by user to handle strokes properly\n      const strokesByUser = {};\n      \n      drawingData.forEach((data) => {\n        if (!strokesByUser[data.user_id]) {\n          strokesByUser[data.user_id] = [];\n        }\n        strokesByUser[data.user_id].push(data);\n      });\n      \n      // Draw each user's strokes\n      Object.values(strokesByUser).forEach((userStrokes) => {\n        if (userStrokes.length === 0) return;\n        \n        // Sort strokes by timestamp\n        const sortedStrokes = userStrokes.sort((a, b) => {\n          return (a.timestamp || 0) - (b.timestamp || 0);\n        });\n        \n        // Draw the stroke\n        ctx.strokeStyle = sortedStrokes[0].color || '#000000';\n        ctx.lineWidth = sortedStrokes[0].brush_size || 2;\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n        ctx.beginPath();\n        \n        let isFirstPoint = true;\n        \n        for (let i = 0; i < sortedStrokes.length; i++) {\n          const stroke = sortedStrokes[i];\n          \n          if (stroke.is_drawing) {\n            if (isFirstPoint || stroke.is_first_point) {\n              ctx.moveTo(stroke.x, stroke.y);\n              isFirstPoint = false;\n            } else {\n              ctx.lineTo(stroke.x, stroke.y);\n            }\n          } else {\n            // End the current stroke\n            ctx.stroke();\n            ctx.beginPath();\n            isFirstPoint = true;\n          }\n        }\n        \n        // Stroke the final path\n        if (!isFirstPoint) {\n          ctx.stroke();\n        }\n      });\n      \n      setLastDrawingDataLength(drawingData.length);\n    }\n  }, [drawingData, width, height]);\n\n  const getMousePos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const getTouchPos = useCallback((e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const touch = e.touches[0];\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    return {\n      x: (touch.clientX - rect.left) * scaleX,\n      y: (touch.clientY - rect.top) * scaleY,\n    };\n  }, []);\n\n  const startDrawing = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(true);\n    setLastX(x);\n    setLastY(y);\n    setCurrentStroke([{ x, y, is_drawing: true }]);\n    \n    // Send first point with is_first_point flag\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: true,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    \n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user?.id,\n      username: user?.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n  }, [isGameActive, isCurrentDrawer, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n\n  const draw = useCallback((x, y) => {\n    if (!isGameActive || !isCurrentDrawer || !isDrawing) return;\n\n    // Add to current stroke\n    setCurrentStroke(prev => [...prev, { x, y, is_drawing: true }]);\n\n    // Send drawing data to server\n    const drawData = {\n      x,\n      y,\n      is_drawing: true,\n      is_first_point: false,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    \n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user?.id,\n      username: user?.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n\n    setLastX(x);\n    setLastY(y);\n  }, [isGameActive, isCurrentDrawer, isDrawing, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n\n  const stopDrawing = useCallback(() => {\n    if (!isGameActive || !isCurrentDrawer) return;\n    \n    setIsDrawing(false);\n    \n    // Send stop drawing signal\n    const drawData = {\n      x: lastX,\n      y: lastY,\n      is_drawing: false,\n      color: brushColor,\n      brush_size: brushSize,\n    };\n\n    sendDrawData(drawData);\n    \n    // Add user info to local drawing data\n    const localDrawData = {\n      ...drawData,\n      user_id: user?.id,\n      username: user?.username,\n      timestamp: Date.now()\n    };\n    addDrawingData(localDrawData);\n    \n    setCurrentStroke([]);\n  }, [isGameActive, isCurrentDrawer, lastX, lastY, brushColor, brushSize, sendDrawData, addDrawingData, user]);\n\n  const clearCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    setLastDrawingDataLength(0);\n    \n    // Send clear canvas request to server\n    if (isGameActive && isCurrentDrawer) {\n      sendClearCanvas();\n    }\n  }, [width, height, isGameActive, isCurrentDrawer, sendClearCanvas]);\n\n  // Mouse events\n  const handleMouseDown = useCallback((e) => {\n    e.preventDefault();\n    const pos = getMousePos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getMousePos, startDrawing]);\n\n  const handleMouseMove = useCallback((e) => {\n    e.preventDefault();\n    if (!isDrawing) return; // Only draw if mouse button is pressed\n    const pos = getMousePos(e);\n    draw(pos.x, pos.y);\n  }, [getMousePos, draw, isDrawing]);\n\n  const handleMouseUp = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  const handleMouseLeave = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Touch events\n  const handleTouchStart = useCallback((e) => {\n    e.preventDefault();\n    const pos = getTouchPos(e);\n    startDrawing(pos.x, pos.y);\n  }, [getTouchPos, startDrawing]);\n\n  const handleTouchMove = useCallback((e) => {\n    e.preventDefault();\n    if (!isDrawing) return; // Only draw if touch is active\n    const pos = getTouchPos(e);\n    draw(pos.x, pos.y);\n  }, [getTouchPos, draw, isDrawing]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    stopDrawing();\n  }, [stopDrawing]);\n\n  // Add document-level mouse up handler to stop drawing when mouse is released outside canvas\n  useEffect(() => {\n    const handleDocumentMouseUp = () => {\n      if (isDrawing) {\n        stopDrawing();\n      }\n    };\n\n    document.addEventListener('mouseup', handleDocumentMouseUp);\n    return () => {\n      document.removeEventListener('mouseup', handleDocumentMouseUp);\n    };\n  }, [isDrawing, stopDrawing]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <canvas\n        ref={canvasRef}\n        className={`w-full h-full rounded-2xl shadow-2xl border-2 border-slate-200 bg-white transition-all duration-200 ${\n          isCurrentDrawer && isGameActive \n            ? 'cursor-crosshair hover:border-blue-300' \n            : 'cursor-not-allowed opacity-90'\n        }`}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n          maxWidth: '100%',\n          maxHeight: '100%',\n        }}\n      />\n      \n      {!isGameActive && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/50 backdrop-blur-sm rounded-2xl\">\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-br from-slate-400 to-slate-600 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n              <Palette className=\"w-8 h-8 text-white\" />\n            </div>\n            <p className=\"text-white text-lg font-semibold\">\n              Game not started yet\n            </p>\n            <p className=\"text-slate-300 text-sm mt-1\">\n              Wait for the game to begin to start drawing\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Drawing controls for current drawer */}\n      {isCurrentDrawer && isGameActive && (\n        <div className=\"absolute top-4 left-4 glass-card p-4 rounded-2xl shadow-xl\">\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"flex items-center gap-3\">\n              <Palette className=\"w-4 h-4 text-slate-600\" />\n              <label className=\"text-sm font-semibold text-slate-700\">Color:</label>\n              <input\n                type=\"color\"\n                value={brushColor}\n                onChange={(e) => useGameStore.getState().setBrushColor(e.target.value)}\n                className=\"w-8 h-8 border-2 border-slate-200 rounded-lg cursor-pointer hover:scale-110 transition-transform duration-200\"\n              />\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              <Settings className=\"w-4 h-4 text-slate-600\" />\n              <label className=\"text-sm font-semibold text-slate-700\">Size:</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                value={brushSize}\n                onChange={(e) => useGameStore.getState().setBrushSize(parseInt(e.target.value))}\n                className=\"w-20 h-2 bg-slate-200 rounded-lg appearance-none cursor-pointer slider\"\n              />\n              <span className=\"text-xs font-semibold text-slate-700 min-w-[20px]\">{brushSize}</span>\n            </div>\n            \n            <button\n              onClick={clearCanvas}\n              className=\"flex items-center justify-center gap-2 px-3 py-2 bg-gradient-to-r from-red-500 to-pink-500 text-white text-sm font-semibold rounded-xl hover:from-red-600 hover:to-pink-600 transition-all duration-200 shadow-lg hover:shadow-xl\"\n            >\n              <RotateCcw className=\"w-4 h-4\" />\n              Clear Canvas\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Drawing indicator */}\n      {isCurrentDrawer && isGameActive && (\n        <div className=\"absolute top-4 right-4 glass-card px-4 py-2 rounded-xl\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 bg-emerald-500 rounded-full animate-pulse\"></div>\n            <span className=\"text-sm font-semibold text-slate-700\">Drawing Mode</span>\n          </div>\n        </div>\n      )}\n\n      {/* Brush preview */}\n      {isCurrentDrawer && isGameActive && (\n        <div className=\"absolute bottom-4 right-4 glass-card p-3 rounded-xl\">\n          <div \n            className=\"rounded-full border-2 border-slate-300\"\n            style={{\n              width: `${brushSize * 2}px`,\n              height: `${brushSize * 2}px`,\n              backgroundColor: brushColor,\n              boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrawingCanvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}