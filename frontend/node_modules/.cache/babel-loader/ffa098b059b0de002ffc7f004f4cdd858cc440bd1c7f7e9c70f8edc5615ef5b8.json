{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  console.log('API Interceptor: Request to', config.url, 'Token:', token ? 'Present' : 'Not present');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('API Interceptor: Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => {\n  console.log('API Interceptor: Response from', response.config.url, 'Status:', response.status);\n  return response;\n}, error => {\n  var _error$config, _error$response, _error$response2, _error$response3;\n  console.error('API Interceptor: Response error from', (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url, 'Status:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, 'Error:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => {\n    console.log('API: Registering user:', userData);\n    return api.post('/auth/register', userData);\n  },\n  login: credentials => {\n    console.log('API: Logging in with credentials:', credentials);\n    return api.post('/auth/login', credentials);\n  },\n  getCurrentUser: () => {\n    console.log('API: Getting current user');\n    return api.get('/auth/me');\n  }\n};\n\n// Rooms API\nexport const roomsAPI = {\n  createRoom: roomData => api.post('/rooms/', roomData),\n  joinRoom: roomData => api.post('/rooms/join', roomData),\n  leaveRoom: roomId => api.post(`/rooms/${roomId}/leave`),\n  getPublicRooms: () => api.get('/rooms/'),\n  getRoomByCode: roomCode => api.get(`/rooms/${roomCode}`),\n  getRoomPlayers: roomId => api.get(`/rooms/${roomId}/players`)\n};\n\n// Games API\nexport const gamesAPI = {\n  startGame: roomId => api.post(`/games/${roomId}/start`),\n  getGameState: roomId => api.get(`/games/${roomId}/state`),\n  submitDrawing: (roomId, drawingData) => api.post(`/games/${roomId}/draw`, drawingData),\n  submitGuess: (roomId, guessData) => api.post(`/games/${roomId}/guess`, guessData),\n  getPublicRooms: () => api.get('/games/rooms/public')\n};\n\n// Users API\nexport const usersAPI = {\n  getUserStats: () => api.get('/users/stats'),\n  getLeaderboard: () => api.get('/users/leaderboard')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","url","Authorization","error","Promise","reject","response","status","_error$config","_error$response","_error$response2","_error$response3","data","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getCurrentUser","get","roomsAPI","createRoom","roomData","joinRoom","leaveRoom","roomId","getPublicRooms","getRoomByCode","roomCode","getRoomPlayers","gamesAPI","startGame","getGameState","submitDrawing","drawingData","submitGuess","guessData","usersAPI","getUserStats","getLeaderboard"],"sources":["/Users/walid/Documents/Networking/drawsync/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    console.log('API Interceptor: Request to', config.url, 'Token:', token ? 'Present' : 'Not present');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('API Interceptor: Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Interceptor: Response from', response.config.url, 'Status:', response.status);\n    return response;\n  },\n  (error) => {\n    console.error('API Interceptor: Response error from', error.config?.url, 'Status:', error.response?.status, 'Error:', error.response?.data);\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: (userData) => {\n    console.log('API: Registering user:', userData);\n    return api.post('/auth/register', userData);\n  },\n  login: (credentials) => {\n    console.log('API: Logging in with credentials:', credentials);\n    return api.post('/auth/login', credentials);\n  },\n  getCurrentUser: () => {\n    console.log('API: Getting current user');\n    return api.get('/auth/me');\n  },\n};\n\n// Rooms API\nexport const roomsAPI = {\n  createRoom: (roomData) => api.post('/rooms/', roomData),\n  joinRoom: (roomData) => api.post('/rooms/join', roomData),\n  leaveRoom: (roomId) => api.post(`/rooms/${roomId}/leave`),\n  getPublicRooms: () => api.get('/rooms/'),\n  getRoomByCode: (roomCode) => api.get(`/rooms/${roomCode}`),\n  getRoomPlayers: (roomId) => api.get(`/rooms/${roomId}/players`),\n};\n\n// Games API\nexport const gamesAPI = {\n  startGame: (roomId) => api.post(`/games/${roomId}/start`),\n  getGameState: (roomId) => api.get(`/games/${roomId}/state`),\n  submitDrawing: (roomId, drawingData) => api.post(`/games/${roomId}/draw`, drawingData),\n  submitGuess: (roomId, guessData) => api.post(`/games/${roomId}/guess`, guessData),\n  getPublicRooms: () => api.get('/games/rooms/public'),\n};\n\n// Users API\nexport const usersAPI = {\n  getUserStats: () => api.get('/users/stats'),\n  getLeaderboard: () => api.get('/users/leaderboard'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}